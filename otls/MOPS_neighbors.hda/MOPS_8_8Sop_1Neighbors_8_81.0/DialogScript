# Dialog script for MOPS::Neighbors::1.0 automatically generated

{
    name	MOPS::Neighbors::1.0
    script	MOPS::Neighbors::1.0
    label	"MOPs Neighbors"

    help {
	""
    }

    inputlabel	1	"Packed Primitives"
    inputlabel	2	"Sub-Network Input #2"
    inputlabel	3	"Sub-Network Input #3"
    inputlabel	4	"Sub-Network Input #4"
    outputlabel	1	"Packed Primitives"
    outputlabel	2	"Neighbors Network"

    parm {
        name    "mode"
        label   "Mode"
        type    integer
        default { "0" }
        menu {
            "0" "Find Neighbors"
            "1" "Connect to Neighbors"
        }
        range   { 0! 10 }
        parmtag { "autoscope" "0000000000000000" }
    }
    groupsimple {
        name    "folder0"
        label   "Find"
        hidewhentab "{ mode == 1 }"

        parm {
            name    "frame"
            label   "Reference Frame"
            type    float
            default { [ "$F" hscript-expr ] }
            range   { 0 10 }
            parmtag { "autoscope" "0000000000000000" }
        }
        parm {
            name    "connect_method"
            label   "Connection Method"
            type    ordinal
            default { "0" }
            menu {
                "0" "Find Nearest"
                "1" "Start/End Groups"
            }
            range   { 0! 10 }
            parmtag { "autoscope" "0000000000000000" }
        }
        parm {
            name    "startgroup"
            label   "Start Group"
            type    string
            default { "start" }
            disablewhen "{ connect_method == 0 }"
            menutoggle {
                [ "opmenu -l blast2 group" ]
            }
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "script_action" "import soputils\nkwargs['geometrytype'] = kwargs['node'].parmTuple('grouptype')\nkwargs['inputindex'] = 0\nsoputils.selectGroupParm(kwargs)" }
            parmtag { "script_action_help" "Select geometry from an available viewport.\nShift-click to turn on Select Groups." }
            parmtag { "script_action_icon" "BUTTONS_reselect" }
        }
        parm {
            name    "endgroup"
            label   "Ends Group"
            type    string
            default { "end" }
            disablewhen "{ connect_method == 0 }"
            menutoggle {
                [ "opmenu -l blast3 group" ]
            }
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "script_action" "import soputils\nkwargs['geometrytype'] = kwargs['node'].parmTuple('grouptype')\nkwargs['inputindex'] = 0\nsoputils.selectGroupParm(kwargs)" }
            parmtag { "script_action_help" "Select geometry from an available viewport.\nShift-click to turn on Select Groups." }
            parmtag { "script_action_icon" "BUTTONS_reselect" }
        }
        parm {
            name    "searchradius"
            label   "Search Radius"
            type    float
            default { "1" }
            range   { 0 1 }
            parmtag { "autoscope" "0000000000000000" }
        }
        parm {
            name    "maxsearchpoints"
            label   "Max Connections"
            type    integer
            default { "10" }
            range   { 0 10 }
            parmtag { "autoscope" "0000000000000000" }
        }
        parm {
            name    "uniformradius"
            label   "Assume Uniform Scale"
            type    toggle
            default { "1" }
            disablewhen "{ connect_method == 1 }"
            range   { 0 10 }
            parmtag { "autoscope" "0000000000000000" }
        }
    }

    groupsimple {
        name    "folder0_1"
        label   "Connect"
        hidewhentab "{ mode == 0 }"

        parm {
            name    "frame2"
            label   "Reference Frame"
            type    float
            default { [ "$F" hscript-expr ] }
            range   { 0 10 }
            parmtag { "autoscope" "0000000000000000" }
        }
        parm {
            name    "do_edge_transport"
            label   "Compute Distance"
            type    toggle
            default { "0" }
            range   { 0! 10 }
            parmtag { "autoscope" "0000000000000000" }
        }
        parm {
            name    "do_falloff_root"
            label   "Falloff Determines Start Points"
            type    toggle
            default { "0" }
            disablewhen "{ do_edge_transport == 0 }"
            range   { 0! 10 }
            parmtag { "autoscope" "0000000000000000" }
        }
        parm {
            name    "root_threshold"
            label   "Falloff Start Threshold"
            type    float
            default { "0.5" }
            disablewhen "{ do_falloff_root == 0 }"
            range   { 0 1 }
            parmtag { "autoscope" "0000000000000000" }
        }
        parm {
            name    "group"
            label   "Start Point Group"
            type    string
            default { "" }
            disablewhen "{ do_falloff_root == 1 }"
            menutoggle {
                [ "opmenu -l pointwrangle3 group" ]
            }
            range   { 0 1 }
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "script_action" "import soputils\nkwargs['geometrytype'] = kwargs['node'].parmTuple('grouptype')\nkwargs['inputindex'] = 0\nsoputils.selectGroupParm(kwargs)" }
            parmtag { "script_action_help" "Select geometry from an available viewport." }
            parmtag { "script_action_icon" "BUTTONS_reselect" }
        }
        parm {
            name    "use_max_distance"
            label   "Use Max Distance"
            type    toggle
            default { "off" }
            range   { 0 10 }
            parmtag { "autoscope" "0000000000000000" }
        }
        parm {
            name    "max_distance"
            label   "Max Distance"
            type    float
            default { "10" }
            disablewhen "{ use_max_distance == 0 }"
            range   { 0 1 }
            parmtag { "autoscope" "0000000000000000" }
        }
    }

}
