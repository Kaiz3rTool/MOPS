MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY"

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename=".OPfallbacks"
Content-Type: application/external-reference

.OPfallbacks

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename=".OPdummydefs"
Content-Type: application/external-reference

.OPdummydefs

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="node_type"
Content-Type: text/plain

Sop

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.init"
Content-Type: text/plain

type = MOPS::Align::1.1
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -7.243 3.62388
connectornextid 0
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create 1575608772
  modify 1575609200
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.inp"
Content-Type: text/plain

1
0 -1.7843088270355674 6.4618211081739112 2 0 __NO_OWNER_NETWORK_BOX__ "FROMOUTPUT"

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/align_pivots.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/align_pivots.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -1.64717 3.32845
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	MOPS_IN 1 1 "input1"
2 	MOPs_Extract_Attributes 1 1 "input2"
}
inputs
{
0 	MOPS_IN 0 1
1 	MOPs_Extract_Attributes 0 1
}
stat
{
  create 1555384760
  modify 1575608772
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/align_pivots.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "mode"
        label   "Mode"
        type    integer
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "do_falloff"
        label   "Do Falloff"
        type    integer
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "pivots_only"
        label   "Pivots Only"
        type    integer
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "falloff_attribute"
        label   "Falloff Attribute"
        type    string
        default { "" }
    }
    parm {
        name    "pivot_offset"
        label   "Pivot Offset"
        type    vector
        size    3
        default { "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "pivot_absolute"
        label   "Pivot Absolute"
        type    vector
        size    3
        default { "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "do_vexpression"
        label   "Do Vexpression"
        type    toggle
        default { "0" }
    }
    parm {
        name    "vexpression"
        label   "Vexpression"
        type    string
        default { "" }
        parmtag { "editor" "1" }
        parmtag { "editorlang" "vex" }
    }
    parm {
        name    "offset_vexpression"
        label   "Offset Vexpression"
        type    string
        default { "" }
        parmtag { "editor" "1" }
        parmtag { "editorlang" "vex" }
    }
    parm {
        name    "vex_precision"
        baseparm
        label   "VEX Precision"
        export  none
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/align_pivots.chn"
Content-Type: text/plain

{
    channel do_falloff {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../do_falloff\") }
    }
    channel pivots_only {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../pivots_only\") }
    }
    channel mode {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../mode\") }
    }
    channel group {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../group\") }
    }
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../grouptype\") }
    }
    channel falloff_attribute {
      lefttype = extend
      righttype = extend
      defaultString = \"mops_falloff\"
      flags = 0
      segment { length = 0 expr = chs(\"../falloff_attribute\") }
    }
    channel pivot_offsetx {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../pivot_offsetx\") }
    }
    channel pivot_offsety {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../pivot_offsety\") }
    }
    channel pivot_offsetz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../pivot_offsetz\") }
    }
    channel pivot_absolutex {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../pivot_absolutex\") }
    }
    channel pivot_absolutey {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../pivot_absolutey\") }
    }
    channel pivot_absolutez {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../pivot_absolutez\") }
    }
    channel do_vexpression {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../do_vexpression\") }
    }
    channel vexpression {
      lefttype = extend
      righttype = extend
      defaultString = "\"// pivot = {0,0,0};\""
      flags = 0
      segment { length = 0 expr = chs(\"../vexpression\") }
    }
    channel offset_vexpression {
      lefttype = extend
      righttype = extend
      defaultString = "\"// offset = {0,0,0};\""
      flags = 0
      segment { length = 0 expr = chs(\"../offset_vexpression\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/align_pivots.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	[ group	"" ] 	)
grouptype	[ 0	locks=0 ]	(	[ grouptype	0 ] 	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"// init falloff
float falloff = 1;
string attr = chs(\"falloff_attribute\");
if(haspointattrib(0, attr) && chi(\"do_falloff\")) {
    falloff = point(0, attr, @ptnum);
}
// get orientation for correcting pivots
vector4 orient = point(1, \"orient\", @ptnum);
// get bounds
float bounds[] = primintrinsic(0, \"packedbounds\", @ptnum);
// get xform matrix to compute scale
// matrix3 xform = primintrinsic(0, \"transform\", @ptnum);
// vector scale = cracktransform(0,0,2,{0,0,0},xform);
vector scale = point(1, \"scale\", @ptnum) * point(1, \"pscale\", @ptnum);
vector old_pivot = point(1, \"pivot\", @ptnum);
// based on user input, align pivots to some part of the bounding box
int mode = chi(\"mode\"); // -X, +X, -Y, +Y, -Z, +Z
vector pivot = old_pivot;
int index = floor(mode / 2);
// replace the index of the pivot we care about
// if in custom pivot mode, just add the custom value
// to the existing pivot.
if(mode == 6) {
    // centroid
    vector offset = @P - getbbox_center(0, sprintf(\"%s\", @ptnum));
    pivot -= offset;
} else if(mode == 7) {
    // local offset
    vector offset = chv(\"pivot_offset\");
    `ifs(ch(\"do_vexpression\"), chs(\"offset_vexpression\"), \"\")`
    pivot += offset;
} else if(mode == 8) {
    // world pivot
    // the pivot needs to be adjusted for scale in this case.
    // we also need to account for the current orientation when adjusting.
    // scale = {1,1,1};
    pivot = qrotate(qinvert(orient), (-@P / scale)+old_pivot) + (chv(\"pivot_absolute\") / scale);
} else if(mode == 9) {
    // local pivot
    // this doesn't account for orientation, meaning the pivot will be
    // an offset described in local space for each prim (probably bad!)
    pivot = chv(\"pivot_absolute\");
} else {
    pivot[index] = bounds[mode];
}
// enable vexpression
`ifs(ch(\"do_vexpression\"), chs(\"vexpression\"), \"\")`

// if falloff is enabled, lerp this shit
vector out_pivot = lerp(old_pivot, pivot, falloff);
// set new pivot
setprimintrinsic(0, \"pivot\", @ptnum, out_pivot, \"set\");
// realign P if asked
vector delta = pivot - old_pivot;
// transform delta by local orientation
if(mode != 9) {
    delta = qrotate(orient, delta);
}
v@__delta = delta;
int pivots_only = chi(\"pivots_only\") || mode == 8;
vector pivots_mod = set(pivots_only, pivots_only, pivots_only);
v@pivot = pivot;
@P += (delta * pivots_mod * scale * falloff);"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
mode	[ 0	locks=0 ]	(	[ mode	9 ] 	)
do_falloff	[ 0	locks=0 ]	(	[ do_falloff	0 ] 	)
pivots_only	[ 0	locks=0 ]	(	[ pivots_only	1 ] 	)
falloff_attribute	[ 0	locks=0 ]	(	[ falloff_attribute	mops_falloff ] 	)
pivot_offset	[ 0	locks=0 ]	(	[ pivot_offsetx	0 ] 	[ pivot_offsety	0 ] 	[ pivot_offsetz	0 ] 	)
pivot_absolute	[ 0	locks=0 ]	(	[ pivot_absolutex	0 ] 	[ pivot_absolutey	0 ] 	[ pivot_absolutez	0 ] 	)
do_vexpression	[ 0	locks=0 ]	(	[ do_vexpression	1 ] 	)
vexpression	[ 0	locks=0 ]	(	[ vexpression	"pivot = v@mops_pivot;" ] 	)
offset_vexpression	[ 0	locks=0 ]	(	[ offset_vexpression	"// offset = {0,0,0};" ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/align_pivots.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/MOPs_Extract_Attributes.init"
Content-Type: text/plain

type = MOPS::Extract_Attributes::1.0
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/MOPs_Extract_Attributes.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 0.429411 4.12717
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	MOPS_IN 1 1 "input1"
}
inputs
{
0 	MOPS_IN 0 1
}
stat
{
  create 1565233152
  modify 1574625625
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/MOPs_Extract_Attributes.parm"
Content-Type: text/plain

{
version 0.8
do_pivot	[ 0	locks=0 ]	(	"on"	)
do_full_transform	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/MOPs_Extract_Attributes.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/MOPS_IN.init"
Content-Type: text/plain

type = null
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/MOPS_IN.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -1.90631 5.01963
connectornextid 2
flags =  lock off model off template on footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	(0) "" 1 "input1"
}
inputs
{
0 	(0) 0 1
}
stat
{
  create 1555386448
  modify 1574625339
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.6 0.7 0.77 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/MOPS_IN.parm"
Content-Type: text/plain

{
version 0.8
copyinput	[ 0	locks=0 ]	(	"on"	)
cacheinput	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/MOPS_IN.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"18.0.287"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output0.init"
Content-Type: text/plain

type = output
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output0.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -1.64417 1.29055
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display on render on highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
0 	attribdelete1 1 1 "input1"
}
inputs
{
0 	attribdelete1 0 1
}
stat
{
  create 1555387829
  modify 1574625562
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output0.parm"
Content-Type: text/plain

{
version 0.8
outputidx	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output0.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"18.0.287"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribdelete1.init"
Content-Type: text/plain

type = attribdelete
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribdelete1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -1.64417 2.29055
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	align_pivots 1 1 "input1"
}
inputs
{
0 	align_pivots 0 1
}
stat
{
  create 1574625561
  modify 1574625576
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribdelete1.parm"
Content-Type: text/plain

{
version 0.8
ptdel	[ 0	locks=0 ]	(	__delta	)
vtxdel	[ 0	locks=0 ]	(	""	)
primdel	[ 0	locks=0 ]	(	""	)
dtldel	[ 0	locks=0 ]	(	""	)
updatevar	[ 0	locks=0 ]	(	"on"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribdelete1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.order"
Content-Type: text/plain

5
align_pivots
MOPS_IN
output0
MOPs_Extract_Attributes
attribdelete1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.net"
Content-Type: text/plain

1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY--
