MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY"

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename=".OPfallbacks"
Content-Type: application/external-reference

.OPfallbacks

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename=".OPdummydefs"
Content-Type: application/external-reference

.OPdummydefs

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="node_type"
Content-Type: text/plain

Sop

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.init"
Content-Type: text/plain

type = MOPS::Color_Modifier::1.0
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -9.60424 -0.631744
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display on render on highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
0 	pointwrangle1 1 1 "input1"
}
inputs
{
0 	pointwrangle1 0 1
}
stat
{
  create 1565234567
  modify 1565234800
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.inp"
Content-Type: text/plain

1
0 -0.0019871914897658174 6.9224702598980192 2 0 __NO_OWNER_NETWORK_BOX__ "FROMOUTPUT"

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Set.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Set.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -7.28027 3.81404
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	attribswap1 1 1 "input1"
}
inputs
{
0 	attribswap1 0 1
}
stat
{
  create 1520090169
  modify 1565234643
  author Mo@Mo-PC
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Set.multiparm"
Content-Type: text/plain

5
Color_From_Falloff#pos ../Color_From_Falloff#pos
Color_From_Falloff#cr ../Color_From_Falloff#cr
Color_From_Falloff#cg ../Color_From_Falloff#cg
Color_From_Falloff#cb ../Color_From_Falloff#cb
Color_From_Falloff#interp ../Color_From_Falloff#interp

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Set.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "Color_From_Falloff"
        label   "Color From Falloff"
        type    ramp_rgb
        default { "2" }
        range   { 1! 10 }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Set.chn"
Content-Type: text/plain

{
    channel Color_From_Falloff1pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1pos\") }
    }
    channel Color_From_Falloff1cr {
      lefttype = extend
      righttype = extend
      default = 0.89999997615814209
      flags = 0
      segment { length = 0 value = 0.89999997615814209 0.89999997615814209 expr = ch(\"../Color_From_Falloff1cr\") }
    }
    channel Color_From_Falloff1cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1cg\") }
    }
    channel Color_From_Falloff1cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1cb\") }
    }
    channel Color_From_Falloff1interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff1interp\") }
    }
    channel Color_From_Falloff2pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2pos\") }
    }
    channel Color_From_Falloff2cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cr\") }
    }
    channel Color_From_Falloff2cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cg\") }
    }
    channel Color_From_Falloff2cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cb\") }
    }
    channel Color_From_Falloff2interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff2interp\") }
    }
    channel Color_From_Falloff {
      lefttype = extend
      righttype = extend
      default = 5
      flags = 0
      segment { length = 0 value = 5 5 expr = ch(\"../Color_From_Falloff\") }
    }
    channel Color_From_Falloff3pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3pos\") }
    }
    channel Color_From_Falloff3cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cr\") }
    }
    channel Color_From_Falloff3cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cg\") }
    }
    channel Color_From_Falloff3cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cb\") }
    }
    channel Color_From_Falloff3interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff3interp\") }
    }
    channel Color_From_Falloff4pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4pos\") }
    }
    channel Color_From_Falloff4cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cr\") }
    }
    channel Color_From_Falloff4cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cg\") }
    }
    channel Color_From_Falloff4cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cb\") }
    }
    channel Color_From_Falloff4interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff4interp\") }
    }
    channel group {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../group\") }
    }
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../grouptype\") }
    }
    channel Color_From_Falloff5pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5pos\") }
    }
    channel Color_From_Falloff5cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cr\") }
    }
    channel Color_From_Falloff5cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cg\") }
    }
    channel Color_From_Falloff5cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cb\") }
    }
    channel Color_From_Falloff5interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff5interp\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Set.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 8	locks=0 ]	(	[ group	"" ] 	)
grouptype	[ 0	locks=0 ]	(	[ grouptype	0 ] 	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"vector col = chramp(\"Color_From_Falloff\", f@mops_falloff);

v@Cd = col;"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
folder1	[ 0	locks=0 ]	(	0	0	)
Color_From_Falloff	[ 0	locks=0 ]	(	[ Color_From_Falloff	5 ] 	)
Color_From_Falloff1pos	[ 0	locks=0 ]	(	[ Color_From_Falloff1pos	0 ] 	)
Color_From_Falloff1c	[ 0	locks=0 ]	(	[ Color_From_Falloff1cr	0.44999998807907104 ] 	[ Color_From_Falloff1cg	0 ] 	[ Color_From_Falloff1cb	0.89999997615814209 ] 	)
Color_From_Falloff1interp	[ 0	locks=0 ]	(	[ Color_From_Falloff1interp	1 ] 	)
Color_From_Falloff2pos	[ 0	locks=0 ]	(	[ Color_From_Falloff2pos	0.25 ] 	)
Color_From_Falloff2c	[ 0	locks=0 ]	(	[ Color_From_Falloff2cr	0 ] 	[ Color_From_Falloff2cg	0.89999997615814209 ] 	[ Color_From_Falloff2cb	0.89999997615814209 ] 	)
Color_From_Falloff2interp	[ 0	locks=0 ]	(	[ Color_From_Falloff2interp	1 ] 	)
Color_From_Falloff3pos	[ 0	locks=0 ]	(	[ Color_From_Falloff3pos	0.5 ] 	)
Color_From_Falloff3c	[ 0	locks=0 ]	(	[ Color_From_Falloff3cr	0 ] 	[ Color_From_Falloff3cg	0.89999997615814209 ] 	[ Color_From_Falloff3cb	0 ] 	)
Color_From_Falloff3interp	[ 0	locks=0 ]	(	[ Color_From_Falloff3interp	1 ] 	)
Color_From_Falloff4pos	[ 0	locks=0 ]	(	[ Color_From_Falloff4pos	0.75 ] 	)
Color_From_Falloff4c	[ 0	locks=0 ]	(	[ Color_From_Falloff4cr	0.89999997615814209 ] 	[ Color_From_Falloff4cg	0.89999997615814209 ] 	[ Color_From_Falloff4cb	0 ] 	)
Color_From_Falloff4interp	[ 0	locks=0 ]	(	[ Color_From_Falloff4interp	1 ] 	)
Color_From_Falloff5pos	[ 0	locks=0 ]	(	[ Color_From_Falloff5pos	1 ] 	)
Color_From_Falloff5c	[ 0	locks=0 ]	(	[ Color_From_Falloff5cr	0.89999997615814209 ] 	[ Color_From_Falloff5cg	0 ] 	[ Color_From_Falloff5cb	0 ] 	)
Color_From_Falloff5interp	[ 0	locks=0 ]	(	[ Color_From_Falloff5interp	1 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Set.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Multiply.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Multiply.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -4.5924 3.81404
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	attribswap1 1 1 "input1"
}
inputs
{
0 	attribswap1 0 1
}
stat
{
  create 1520090169
  modify 1565234643
  author Mo@Mo-PC
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Multiply.multiparm"
Content-Type: text/plain

5
Color_From_Falloff#pos ../Color_From_Falloff#pos
Color_From_Falloff#cr ../Color_From_Falloff#cr
Color_From_Falloff#cg ../Color_From_Falloff#cg
Color_From_Falloff#cb ../Color_From_Falloff#cb
Color_From_Falloff#interp ../Color_From_Falloff#interp

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Multiply.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "Color_From_Falloff"
        label   "Color From Falloff"
        type    ramp_rgb
        default { "2" }
        range   { 1! 10 }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Multiply.chn"
Content-Type: text/plain

{
    channel Color_From_Falloff1pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1pos\") }
    }
    channel Color_From_Falloff1cr {
      lefttype = extend
      righttype = extend
      default = 0.89999997615814209
      flags = 0
      segment { length = 0 value = 0.89999997615814209 0.89999997615814209 expr = ch(\"../Color_From_Falloff1cr\") }
    }
    channel Color_From_Falloff1cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1cg\") }
    }
    channel Color_From_Falloff1cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1cb\") }
    }
    channel Color_From_Falloff1interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff1interp\") }
    }
    channel Color_From_Falloff2pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2pos\") }
    }
    channel Color_From_Falloff2cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cr\") }
    }
    channel Color_From_Falloff2cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cg\") }
    }
    channel Color_From_Falloff2cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cb\") }
    }
    channel Color_From_Falloff2interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff2interp\") }
    }
    channel Color_From_Falloff {
      lefttype = extend
      righttype = extend
      default = 5
      flags = 0
      segment { length = 0 value = 5 5 expr = ch(\"../Color_From_Falloff\") }
    }
    channel Color_From_Falloff3pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3pos\") }
    }
    channel Color_From_Falloff3cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cr\") }
    }
    channel Color_From_Falloff3cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cg\") }
    }
    channel Color_From_Falloff3cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cb\") }
    }
    channel Color_From_Falloff3interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff3interp\") }
    }
    channel Color_From_Falloff4pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4pos\") }
    }
    channel Color_From_Falloff4cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cr\") }
    }
    channel Color_From_Falloff4cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cg\") }
    }
    channel Color_From_Falloff4cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cb\") }
    }
    channel Color_From_Falloff4interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff4interp\") }
    }
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Set/grouptype\") }
    }
    channel Color_From_Falloff5pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5pos\") }
    }
    channel Color_From_Falloff5cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cr\") }
    }
    channel Color_From_Falloff5cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cg\") }
    }
    channel Color_From_Falloff5cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cb\") }
    }
    channel Color_From_Falloff5interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff5interp\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Multiply.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	`chs(\"../Set/group\")`	)
grouptype	[ 8	locks=0 ]	(	[ grouptype	0 ] 	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"if(haspointattrib(0, \"Cd\") == 0)
    v@Cd = {0,0,0};

vector col = chramp(\"Color_From_Falloff\", f@mops_falloff);

v@Cd *= col;"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
folder1	[ 0	locks=0 ]	(	0	0	)
Color_From_Falloff	[ 0	locks=0 ]	(	[ Color_From_Falloff	5 ] 	)
Color_From_Falloff1pos	[ 0	locks=0 ]	(	[ Color_From_Falloff1pos	0 ] 	)
Color_From_Falloff1c	[ 0	locks=0 ]	(	[ Color_From_Falloff1cr	0.89999997615814209 ] 	[ Color_From_Falloff1cg	0 ] 	[ Color_From_Falloff1cb	0 ] 	)
Color_From_Falloff1interp	[ 0	locks=0 ]	(	[ Color_From_Falloff1interp	1 ] 	)
Color_From_Falloff2pos	[ 0	locks=0 ]	(	[ Color_From_Falloff2pos	0.25 ] 	)
Color_From_Falloff2c	[ 0	locks=0 ]	(	[ Color_From_Falloff2cr	0.89999997615814209 ] 	[ Color_From_Falloff2cg	0.89999997615814209 ] 	[ Color_From_Falloff2cb	0 ] 	)
Color_From_Falloff2interp	[ 0	locks=0 ]	(	[ Color_From_Falloff2interp	1 ] 	)
Color_From_Falloff3pos	[ 0	locks=0 ]	(	[ Color_From_Falloff3pos	0.5 ] 	)
Color_From_Falloff3c	[ 0	locks=0 ]	(	[ Color_From_Falloff3cr	0 ] 	[ Color_From_Falloff3cg	0.89999997615814209 ] 	[ Color_From_Falloff3cb	0 ] 	)
Color_From_Falloff3interp	[ 0	locks=0 ]	(	[ Color_From_Falloff3interp	1 ] 	)
Color_From_Falloff4pos	[ 0	locks=0 ]	(	[ Color_From_Falloff4pos	0.75 ] 	)
Color_From_Falloff4c	[ 0	locks=0 ]	(	[ Color_From_Falloff4cr	0 ] 	[ Color_From_Falloff4cg	0.89999997615814209 ] 	[ Color_From_Falloff4cb	0.89999997615814209 ] 	)
Color_From_Falloff4interp	[ 0	locks=0 ]	(	[ Color_From_Falloff4interp	1 ] 	)
Color_From_Falloff5pos	[ 0	locks=0 ]	(	[ Color_From_Falloff5pos	0 ] 	)
Color_From_Falloff5c	[ 0	locks=0 ]	(	[ Color_From_Falloff5cr	0 ] 	[ Color_From_Falloff5cg	0 ] 	[ Color_From_Falloff5cb	0 ] 	)
Color_From_Falloff5interp	[ 0	locks=0 ]	(	[ Color_From_Falloff5interp	1 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Multiply.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Add.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Add.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -1.82123 3.81404
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	attribswap1 1 1 "input1"
}
inputs
{
0 	attribswap1 0 1
}
stat
{
  create 1520090169
  modify 1565234643
  author Mo@Mo-PC
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Add.multiparm"
Content-Type: text/plain

5
Color_From_Falloff#pos ../Color_From_Falloff#pos
Color_From_Falloff#cr ../Color_From_Falloff#cr
Color_From_Falloff#cg ../Color_From_Falloff#cg
Color_From_Falloff#cb ../Color_From_Falloff#cb
Color_From_Falloff#interp ../Color_From_Falloff#interp

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Add.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "Color_From_Falloff"
        label   "Color From Falloff"
        type    ramp_rgb
        default { "2" }
        range   { 1! 10 }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Add.chn"
Content-Type: text/plain

{
    channel Color_From_Falloff1pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1pos\") }
    }
    channel Color_From_Falloff1cr {
      lefttype = extend
      righttype = extend
      default = 0.89999997615814209
      flags = 0
      segment { length = 0 value = 0.89999997615814209 0.89999997615814209 expr = ch(\"../Color_From_Falloff1cr\") }
    }
    channel Color_From_Falloff1cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1cg\") }
    }
    channel Color_From_Falloff1cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1cb\") }
    }
    channel Color_From_Falloff1interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff1interp\") }
    }
    channel Color_From_Falloff2pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2pos\") }
    }
    channel Color_From_Falloff2cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cr\") }
    }
    channel Color_From_Falloff2cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cg\") }
    }
    channel Color_From_Falloff2cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cb\") }
    }
    channel Color_From_Falloff2interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff2interp\") }
    }
    channel Color_From_Falloff {
      lefttype = extend
      righttype = extend
      default = 5
      flags = 0
      segment { length = 0 value = 5 5 expr = ch(\"../Color_From_Falloff\") }
    }
    channel Color_From_Falloff3pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3pos\") }
    }
    channel Color_From_Falloff3cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cr\") }
    }
    channel Color_From_Falloff3cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cg\") }
    }
    channel Color_From_Falloff3cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cb\") }
    }
    channel Color_From_Falloff3interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff3interp\") }
    }
    channel Color_From_Falloff4pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4pos\") }
    }
    channel Color_From_Falloff4cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cr\") }
    }
    channel Color_From_Falloff4cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cg\") }
    }
    channel Color_From_Falloff4cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cb\") }
    }
    channel Color_From_Falloff4interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff4interp\") }
    }
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Set/grouptype\") }
    }
    channel Color_From_Falloff5pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5pos\") }
    }
    channel Color_From_Falloff5cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cr\") }
    }
    channel Color_From_Falloff5cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cg\") }
    }
    channel Color_From_Falloff5cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cb\") }
    }
    channel Color_From_Falloff5interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff5interp\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Add.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	`chs(\"../Set/group\")`	)
grouptype	[ 8	locks=0 ]	(	[ grouptype	0 ] 	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"if(haspointattrib(0, \"Cd\") == 0)
    v@Cd = {0,0,0};

vector col = chramp(\"Color_From_Falloff\", f@mops_falloff);

v@Cd += col;"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
folder1	[ 0	locks=0 ]	(	0	0	)
Color_From_Falloff	[ 0	locks=0 ]	(	[ Color_From_Falloff	5 ] 	)
Color_From_Falloff1pos	[ 0	locks=0 ]	(	[ Color_From_Falloff1pos	0 ] 	)
Color_From_Falloff1c	[ 0	locks=0 ]	(	[ Color_From_Falloff1cr	0.89999997615814209 ] 	[ Color_From_Falloff1cg	0 ] 	[ Color_From_Falloff1cb	0 ] 	)
Color_From_Falloff1interp	[ 0	locks=0 ]	(	[ Color_From_Falloff1interp	1 ] 	)
Color_From_Falloff2pos	[ 0	locks=0 ]	(	[ Color_From_Falloff2pos	0.25 ] 	)
Color_From_Falloff2c	[ 0	locks=0 ]	(	[ Color_From_Falloff2cr	0.89999997615814209 ] 	[ Color_From_Falloff2cg	0.89999997615814209 ] 	[ Color_From_Falloff2cb	0 ] 	)
Color_From_Falloff2interp	[ 0	locks=0 ]	(	[ Color_From_Falloff2interp	1 ] 	)
Color_From_Falloff3pos	[ 0	locks=0 ]	(	[ Color_From_Falloff3pos	0.5 ] 	)
Color_From_Falloff3c	[ 0	locks=0 ]	(	[ Color_From_Falloff3cr	0 ] 	[ Color_From_Falloff3cg	0.89999997615814209 ] 	[ Color_From_Falloff3cb	0 ] 	)
Color_From_Falloff3interp	[ 0	locks=0 ]	(	[ Color_From_Falloff3interp	1 ] 	)
Color_From_Falloff4pos	[ 0	locks=0 ]	(	[ Color_From_Falloff4pos	0.75 ] 	)
Color_From_Falloff4c	[ 0	locks=0 ]	(	[ Color_From_Falloff4cr	0 ] 	[ Color_From_Falloff4cg	0.89999997615814209 ] 	[ Color_From_Falloff4cb	0.89999997615814209 ] 	)
Color_From_Falloff4interp	[ 0	locks=0 ]	(	[ Color_From_Falloff4interp	1 ] 	)
Color_From_Falloff5pos	[ 0	locks=0 ]	(	[ Color_From_Falloff5pos	0 ] 	)
Color_From_Falloff5c	[ 0	locks=0 ]	(	[ Color_From_Falloff5cr	0 ] 	[ Color_From_Falloff5cg	0 ] 	[ Color_From_Falloff5cb	0 ] 	)
Color_From_Falloff5interp	[ 0	locks=0 ]	(	[ Color_From_Falloff5interp	1 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Add.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Screen.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Screen.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 4.65656 3.81404
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	attribswap1 1 1 "input1"
}
inputs
{
0 	attribswap1 0 1
}
stat
{
  create 1520090169
  modify 1565234643
  author Mo@Mo-PC
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Screen.multiparm"
Content-Type: text/plain

5
Color_From_Falloff#pos ../Color_From_Falloff#pos
Color_From_Falloff#cr ../Color_From_Falloff#cr
Color_From_Falloff#cg ../Color_From_Falloff#cg
Color_From_Falloff#cb ../Color_From_Falloff#cb
Color_From_Falloff#interp ../Color_From_Falloff#interp

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Screen.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "Color_From_Falloff"
        label   "Color From Falloff"
        type    ramp_rgb
        default { "2" }
        range   { 1! 10 }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Screen.chn"
Content-Type: text/plain

{
    channel Color_From_Falloff1pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1pos\") }
    }
    channel Color_From_Falloff1cr {
      lefttype = extend
      righttype = extend
      default = 0.89999997615814209
      flags = 0
      segment { length = 0 value = 0.89999997615814209 0.89999997615814209 expr = ch(\"../Color_From_Falloff1cr\") }
    }
    channel Color_From_Falloff1cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1cg\") }
    }
    channel Color_From_Falloff1cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1cb\") }
    }
    channel Color_From_Falloff1interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff1interp\") }
    }
    channel Color_From_Falloff2pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2pos\") }
    }
    channel Color_From_Falloff2cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cr\") }
    }
    channel Color_From_Falloff2cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cg\") }
    }
    channel Color_From_Falloff2cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cb\") }
    }
    channel Color_From_Falloff2interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff2interp\") }
    }
    channel Color_From_Falloff {
      lefttype = extend
      righttype = extend
      default = 5
      flags = 0
      segment { length = 0 value = 5 5 expr = ch(\"../Color_From_Falloff\") }
    }
    channel Color_From_Falloff3pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3pos\") }
    }
    channel Color_From_Falloff3cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cr\") }
    }
    channel Color_From_Falloff3cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cg\") }
    }
    channel Color_From_Falloff3cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cb\") }
    }
    channel Color_From_Falloff3interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff3interp\") }
    }
    channel Color_From_Falloff4pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4pos\") }
    }
    channel Color_From_Falloff4cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cr\") }
    }
    channel Color_From_Falloff4cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cg\") }
    }
    channel Color_From_Falloff4cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cb\") }
    }
    channel Color_From_Falloff4interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff4interp\") }
    }
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Set/grouptype\") }
    }
    channel Color_From_Falloff5pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5pos\") }
    }
    channel Color_From_Falloff5cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cr\") }
    }
    channel Color_From_Falloff5cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cg\") }
    }
    channel Color_From_Falloff5cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cb\") }
    }
    channel Color_From_Falloff5interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff5interp\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Screen.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	`chs(\"../Set/group\")`	)
grouptype	[ 8	locks=0 ]	(	[ grouptype	0 ] 	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"if(haspointattrib(0, \"Cd\") == 0)
    v@Cd = {0,0,0};

vector b = chramp(\"Color_From_Falloff\", f@mops_falloff);
vector a = v@Cd;


v@Cd = {1,1,1} - ({1,1,1} - a) * ({1,1,1} - b);"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
folder1	[ 0	locks=0 ]	(	0	0	)
Color_From_Falloff	[ 0	locks=0 ]	(	[ Color_From_Falloff	5 ] 	)
Color_From_Falloff1pos	[ 0	locks=0 ]	(	[ Color_From_Falloff1pos	0 ] 	)
Color_From_Falloff1c	[ 0	locks=0 ]	(	[ Color_From_Falloff1cr	0.89999997615814209 ] 	[ Color_From_Falloff1cg	0 ] 	[ Color_From_Falloff1cb	0 ] 	)
Color_From_Falloff1interp	[ 0	locks=0 ]	(	[ Color_From_Falloff1interp	1 ] 	)
Color_From_Falloff2pos	[ 0	locks=0 ]	(	[ Color_From_Falloff2pos	0.25 ] 	)
Color_From_Falloff2c	[ 0	locks=0 ]	(	[ Color_From_Falloff2cr	0.89999997615814209 ] 	[ Color_From_Falloff2cg	0.89999997615814209 ] 	[ Color_From_Falloff2cb	0 ] 	)
Color_From_Falloff2interp	[ 0	locks=0 ]	(	[ Color_From_Falloff2interp	1 ] 	)
Color_From_Falloff3pos	[ 0	locks=0 ]	(	[ Color_From_Falloff3pos	0.5 ] 	)
Color_From_Falloff3c	[ 0	locks=0 ]	(	[ Color_From_Falloff3cr	0 ] 	[ Color_From_Falloff3cg	0.89999997615814209 ] 	[ Color_From_Falloff3cb	0 ] 	)
Color_From_Falloff3interp	[ 0	locks=0 ]	(	[ Color_From_Falloff3interp	1 ] 	)
Color_From_Falloff4pos	[ 0	locks=0 ]	(	[ Color_From_Falloff4pos	0.75 ] 	)
Color_From_Falloff4c	[ 0	locks=0 ]	(	[ Color_From_Falloff4cr	0 ] 	[ Color_From_Falloff4cg	0.89999997615814209 ] 	[ Color_From_Falloff4cb	0.89999997615814209 ] 	)
Color_From_Falloff4interp	[ 0	locks=0 ]	(	[ Color_From_Falloff4interp	1 ] 	)
Color_From_Falloff5pos	[ 0	locks=0 ]	(	[ Color_From_Falloff5pos	0 ] 	)
Color_From_Falloff5c	[ 0	locks=0 ]	(	[ Color_From_Falloff5cr	0 ] 	[ Color_From_Falloff5cg	0 ] 	[ Color_From_Falloff5cb	0 ] 	)
Color_From_Falloff5interp	[ 0	locks=0 ]	(	[ Color_From_Falloff5interp	1 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Screen.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Subtract.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Subtract.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 0.351699 3.81404
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	attribswap1 1 1 "input1"
}
inputs
{
0 	attribswap1 0 1
}
stat
{
  create 1520090169
  modify 1565234643
  author Mo@Mo-PC
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Subtract.multiparm"
Content-Type: text/plain

5
Color_From_Falloff#pos ../Color_From_Falloff#pos
Color_From_Falloff#cr ../Color_From_Falloff#cr
Color_From_Falloff#cg ../Color_From_Falloff#cg
Color_From_Falloff#cb ../Color_From_Falloff#cb
Color_From_Falloff#interp ../Color_From_Falloff#interp

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Subtract.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "Color_From_Falloff"
        label   "Color From Falloff"
        type    ramp_rgb
        default { "2" }
        range   { 1! 10 }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Subtract.chn"
Content-Type: text/plain

{
    channel Color_From_Falloff1pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1pos\") }
    }
    channel Color_From_Falloff1cr {
      lefttype = extend
      righttype = extend
      default = 0.89999997615814209
      flags = 0
      segment { length = 0 value = 0.89999997615814209 0.89999997615814209 expr = ch(\"../Color_From_Falloff1cr\") }
    }
    channel Color_From_Falloff1cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1cg\") }
    }
    channel Color_From_Falloff1cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1cb\") }
    }
    channel Color_From_Falloff1interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff1interp\") }
    }
    channel Color_From_Falloff2pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2pos\") }
    }
    channel Color_From_Falloff2cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cr\") }
    }
    channel Color_From_Falloff2cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cg\") }
    }
    channel Color_From_Falloff2cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cb\") }
    }
    channel Color_From_Falloff2interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff2interp\") }
    }
    channel Color_From_Falloff {
      lefttype = extend
      righttype = extend
      default = 5
      flags = 0
      segment { length = 0 value = 5 5 expr = ch(\"../Color_From_Falloff\") }
    }
    channel Color_From_Falloff3pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3pos\") }
    }
    channel Color_From_Falloff3cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cr\") }
    }
    channel Color_From_Falloff3cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cg\") }
    }
    channel Color_From_Falloff3cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cb\") }
    }
    channel Color_From_Falloff3interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff3interp\") }
    }
    channel Color_From_Falloff4pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4pos\") }
    }
    channel Color_From_Falloff4cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cr\") }
    }
    channel Color_From_Falloff4cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cg\") }
    }
    channel Color_From_Falloff4cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cb\") }
    }
    channel Color_From_Falloff4interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff4interp\") }
    }
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Set/grouptype\") }
    }
    channel Color_From_Falloff5pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5pos\") }
    }
    channel Color_From_Falloff5cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cr\") }
    }
    channel Color_From_Falloff5cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cg\") }
    }
    channel Color_From_Falloff5cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cb\") }
    }
    channel Color_From_Falloff5interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff5interp\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Subtract.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	`chs(\"../Set/group\")`	)
grouptype	[ 8	locks=0 ]	(	[ grouptype	0 ] 	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"if(haspointattrib(0, \"Cd\") == 0)
    v@Cd = {0,0,0};

vector col = chramp(\"Color_From_Falloff\", f@mops_falloff);

v@Cd -= col;"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
folder1	[ 0	locks=0 ]	(	0	0	)
Color_From_Falloff	[ 0	locks=0 ]	(	[ Color_From_Falloff	5 ] 	)
Color_From_Falloff1pos	[ 0	locks=0 ]	(	[ Color_From_Falloff1pos	0 ] 	)
Color_From_Falloff1c	[ 0	locks=0 ]	(	[ Color_From_Falloff1cr	0.89999997615814209 ] 	[ Color_From_Falloff1cg	0 ] 	[ Color_From_Falloff1cb	0 ] 	)
Color_From_Falloff1interp	[ 0	locks=0 ]	(	[ Color_From_Falloff1interp	1 ] 	)
Color_From_Falloff2pos	[ 0	locks=0 ]	(	[ Color_From_Falloff2pos	0.25 ] 	)
Color_From_Falloff2c	[ 0	locks=0 ]	(	[ Color_From_Falloff2cr	0.89999997615814209 ] 	[ Color_From_Falloff2cg	0.89999997615814209 ] 	[ Color_From_Falloff2cb	0 ] 	)
Color_From_Falloff2interp	[ 0	locks=0 ]	(	[ Color_From_Falloff2interp	1 ] 	)
Color_From_Falloff3pos	[ 0	locks=0 ]	(	[ Color_From_Falloff3pos	0.5 ] 	)
Color_From_Falloff3c	[ 0	locks=0 ]	(	[ Color_From_Falloff3cr	0 ] 	[ Color_From_Falloff3cg	0.89999997615814209 ] 	[ Color_From_Falloff3cb	0 ] 	)
Color_From_Falloff3interp	[ 0	locks=0 ]	(	[ Color_From_Falloff3interp	1 ] 	)
Color_From_Falloff4pos	[ 0	locks=0 ]	(	[ Color_From_Falloff4pos	0.75 ] 	)
Color_From_Falloff4c	[ 0	locks=0 ]	(	[ Color_From_Falloff4cr	0 ] 	[ Color_From_Falloff4cg	0.89999997615814209 ] 	[ Color_From_Falloff4cb	0.89999997615814209 ] 	)
Color_From_Falloff4interp	[ 0	locks=0 ]	(	[ Color_From_Falloff4interp	1 ] 	)
Color_From_Falloff5pos	[ 0	locks=0 ]	(	[ Color_From_Falloff5pos	0 ] 	)
Color_From_Falloff5c	[ 0	locks=0 ]	(	[ Color_From_Falloff5cr	0 ] 	[ Color_From_Falloff5cg	0 ] 	[ Color_From_Falloff5cb	0 ] 	)
Color_From_Falloff5interp	[ 0	locks=0 ]	(	[ Color_From_Falloff5interp	1 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Subtract.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Divide.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Divide.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 2.52463 3.81404
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	attribswap1 1 1 "input1"
}
inputs
{
0 	attribswap1 0 1
}
stat
{
  create 1520090169
  modify 1565234643
  author Mo@Mo-PC
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Divide.multiparm"
Content-Type: text/plain

5
Color_From_Falloff#pos ../Color_From_Falloff#pos
Color_From_Falloff#cr ../Color_From_Falloff#cr
Color_From_Falloff#cg ../Color_From_Falloff#cg
Color_From_Falloff#cb ../Color_From_Falloff#cb
Color_From_Falloff#interp ../Color_From_Falloff#interp

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Divide.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "Color_From_Falloff"
        label   "Color From Falloff"
        type    ramp_rgb
        default { "2" }
        range   { 1! 10 }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Divide.chn"
Content-Type: text/plain

{
    channel Color_From_Falloff1pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1pos\") }
    }
    channel Color_From_Falloff1cr {
      lefttype = extend
      righttype = extend
      default = 0.89999997615814209
      flags = 0
      segment { length = 0 value = 0.89999997615814209 0.89999997615814209 expr = ch(\"../Color_From_Falloff1cr\") }
    }
    channel Color_From_Falloff1cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1cg\") }
    }
    channel Color_From_Falloff1cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1cb\") }
    }
    channel Color_From_Falloff1interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff1interp\") }
    }
    channel Color_From_Falloff2pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2pos\") }
    }
    channel Color_From_Falloff2cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cr\") }
    }
    channel Color_From_Falloff2cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cg\") }
    }
    channel Color_From_Falloff2cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cb\") }
    }
    channel Color_From_Falloff2interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff2interp\") }
    }
    channel Color_From_Falloff {
      lefttype = extend
      righttype = extend
      default = 5
      flags = 0
      segment { length = 0 value = 5 5 expr = ch(\"../Color_From_Falloff\") }
    }
    channel Color_From_Falloff3pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3pos\") }
    }
    channel Color_From_Falloff3cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cr\") }
    }
    channel Color_From_Falloff3cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cg\") }
    }
    channel Color_From_Falloff3cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cb\") }
    }
    channel Color_From_Falloff3interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff3interp\") }
    }
    channel Color_From_Falloff4pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4pos\") }
    }
    channel Color_From_Falloff4cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cr\") }
    }
    channel Color_From_Falloff4cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cg\") }
    }
    channel Color_From_Falloff4cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cb\") }
    }
    channel Color_From_Falloff4interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff4interp\") }
    }
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Set/grouptype\") }
    }
    channel Color_From_Falloff5pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5pos\") }
    }
    channel Color_From_Falloff5cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cr\") }
    }
    channel Color_From_Falloff5cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cg\") }
    }
    channel Color_From_Falloff5cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cb\") }
    }
    channel Color_From_Falloff5interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff5interp\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Divide.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	`chs(\"../Set/group\")`	)
grouptype	[ 8	locks=0 ]	(	[ grouptype	0 ] 	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"if(haspointattrib(0, \"Cd\") == 0)
    v@Cd = {0,0,0};

vector col = chramp(\"Color_From_Falloff\", f@mops_falloff);

v@Cd /= col;"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
folder1	[ 0	locks=0 ]	(	0	0	)
Color_From_Falloff	[ 0	locks=0 ]	(	[ Color_From_Falloff	5 ] 	)
Color_From_Falloff1pos	[ 0	locks=0 ]	(	[ Color_From_Falloff1pos	0 ] 	)
Color_From_Falloff1c	[ 0	locks=0 ]	(	[ Color_From_Falloff1cr	0.89999997615814209 ] 	[ Color_From_Falloff1cg	0 ] 	[ Color_From_Falloff1cb	0 ] 	)
Color_From_Falloff1interp	[ 0	locks=0 ]	(	[ Color_From_Falloff1interp	1 ] 	)
Color_From_Falloff2pos	[ 0	locks=0 ]	(	[ Color_From_Falloff2pos	0.25 ] 	)
Color_From_Falloff2c	[ 0	locks=0 ]	(	[ Color_From_Falloff2cr	0.89999997615814209 ] 	[ Color_From_Falloff2cg	0.89999997615814209 ] 	[ Color_From_Falloff2cb	0 ] 	)
Color_From_Falloff2interp	[ 0	locks=0 ]	(	[ Color_From_Falloff2interp	1 ] 	)
Color_From_Falloff3pos	[ 0	locks=0 ]	(	[ Color_From_Falloff3pos	0.5 ] 	)
Color_From_Falloff3c	[ 0	locks=0 ]	(	[ Color_From_Falloff3cr	0 ] 	[ Color_From_Falloff3cg	0.89999997615814209 ] 	[ Color_From_Falloff3cb	0 ] 	)
Color_From_Falloff3interp	[ 0	locks=0 ]	(	[ Color_From_Falloff3interp	1 ] 	)
Color_From_Falloff4pos	[ 0	locks=0 ]	(	[ Color_From_Falloff4pos	0.75 ] 	)
Color_From_Falloff4c	[ 0	locks=0 ]	(	[ Color_From_Falloff4cr	0 ] 	[ Color_From_Falloff4cg	0.89999997615814209 ] 	[ Color_From_Falloff4cb	0.89999997615814209 ] 	)
Color_From_Falloff4interp	[ 0	locks=0 ]	(	[ Color_From_Falloff4interp	1 ] 	)
Color_From_Falloff5pos	[ 0	locks=0 ]	(	[ Color_From_Falloff5pos	0 ] 	)
Color_From_Falloff5c	[ 0	locks=0 ]	(	[ Color_From_Falloff5cr	0 ] 	[ Color_From_Falloff5cg	0 ] 	[ Color_From_Falloff5cb	0 ] 	)
Color_From_Falloff5interp	[ 0	locks=0 ]	(	[ Color_From_Falloff5interp	1 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Divide.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Overlay.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Overlay.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 6.75774 3.81404
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	attribswap1 1 1 "input1"
}
inputs
{
0 	attribswap1 0 1
}
stat
{
  create 1520090169
  modify 1565234643
  author Mo@Mo-PC
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Overlay.multiparm"
Content-Type: text/plain

5
Color_From_Falloff#pos ../Color_From_Falloff#pos
Color_From_Falloff#cr ../Color_From_Falloff#cr
Color_From_Falloff#cg ../Color_From_Falloff#cg
Color_From_Falloff#cb ../Color_From_Falloff#cb
Color_From_Falloff#interp ../Color_From_Falloff#interp

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Overlay.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "Color_From_Falloff"
        label   "Color From Falloff"
        type    ramp_rgb
        default { "2" }
        range   { 1! 10 }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Overlay.chn"
Content-Type: text/plain

{
    channel Color_From_Falloff1pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1pos\") }
    }
    channel Color_From_Falloff1cr {
      lefttype = extend
      righttype = extend
      default = 0.89999997615814209
      flags = 0
      segment { length = 0 value = 0.89999997615814209 0.89999997615814209 expr = ch(\"../Color_From_Falloff1cr\") }
    }
    channel Color_From_Falloff1cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1cg\") }
    }
    channel Color_From_Falloff1cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1cb\") }
    }
    channel Color_From_Falloff1interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff1interp\") }
    }
    channel Color_From_Falloff2pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2pos\") }
    }
    channel Color_From_Falloff2cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cr\") }
    }
    channel Color_From_Falloff2cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cg\") }
    }
    channel Color_From_Falloff2cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cb\") }
    }
    channel Color_From_Falloff2interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff2interp\") }
    }
    channel Color_From_Falloff {
      lefttype = extend
      righttype = extend
      default = 5
      flags = 0
      segment { length = 0 value = 5 5 expr = ch(\"../Color_From_Falloff\") }
    }
    channel Color_From_Falloff3pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3pos\") }
    }
    channel Color_From_Falloff3cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cr\") }
    }
    channel Color_From_Falloff3cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cg\") }
    }
    channel Color_From_Falloff3cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cb\") }
    }
    channel Color_From_Falloff3interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff3interp\") }
    }
    channel Color_From_Falloff4pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4pos\") }
    }
    channel Color_From_Falloff4cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cr\") }
    }
    channel Color_From_Falloff4cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cg\") }
    }
    channel Color_From_Falloff4cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cb\") }
    }
    channel Color_From_Falloff4interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff4interp\") }
    }
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Set/grouptype\") }
    }
    channel Color_From_Falloff5pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5pos\") }
    }
    channel Color_From_Falloff5cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cr\") }
    }
    channel Color_From_Falloff5cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cg\") }
    }
    channel Color_From_Falloff5cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cb\") }
    }
    channel Color_From_Falloff5interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff5interp\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Overlay.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	`chs(\"../Set/group\")`	)
grouptype	[ 8	locks=0 ]	(	[ grouptype	0 ] 	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"if(haspointattrib(0, \"Cd\") == 0)
    v@Cd = {0,0,0};

vector b = chramp(\"Color_From_Falloff\", f@mops_falloff);
vector a = v@Cd;

vector out = {0,0,0};

if(avg(a) < .5)
    out = 2* a * b;
else
    out = {1,1,1} - 2 * ({1,1,1} - a) * ({1,1,1} - b);

v@Cd = out;"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
folder1	[ 0	locks=0 ]	(	0	0	)
Color_From_Falloff	[ 0	locks=0 ]	(	[ Color_From_Falloff	5 ] 	)
Color_From_Falloff1pos	[ 0	locks=0 ]	(	[ Color_From_Falloff1pos	0 ] 	)
Color_From_Falloff1c	[ 0	locks=0 ]	(	[ Color_From_Falloff1cr	0.89999997615814209 ] 	[ Color_From_Falloff1cg	0 ] 	[ Color_From_Falloff1cb	0 ] 	)
Color_From_Falloff1interp	[ 0	locks=0 ]	(	[ Color_From_Falloff1interp	1 ] 	)
Color_From_Falloff2pos	[ 0	locks=0 ]	(	[ Color_From_Falloff2pos	0.25 ] 	)
Color_From_Falloff2c	[ 0	locks=0 ]	(	[ Color_From_Falloff2cr	0.89999997615814209 ] 	[ Color_From_Falloff2cg	0.89999997615814209 ] 	[ Color_From_Falloff2cb	0 ] 	)
Color_From_Falloff2interp	[ 0	locks=0 ]	(	[ Color_From_Falloff2interp	1 ] 	)
Color_From_Falloff3pos	[ 0	locks=0 ]	(	[ Color_From_Falloff3pos	0.5 ] 	)
Color_From_Falloff3c	[ 0	locks=0 ]	(	[ Color_From_Falloff3cr	0 ] 	[ Color_From_Falloff3cg	0.89999997615814209 ] 	[ Color_From_Falloff3cb	0 ] 	)
Color_From_Falloff3interp	[ 0	locks=0 ]	(	[ Color_From_Falloff3interp	1 ] 	)
Color_From_Falloff4pos	[ 0	locks=0 ]	(	[ Color_From_Falloff4pos	0.75 ] 	)
Color_From_Falloff4c	[ 0	locks=0 ]	(	[ Color_From_Falloff4cr	0 ] 	[ Color_From_Falloff4cg	0.89999997615814209 ] 	[ Color_From_Falloff4cb	0.89999997615814209 ] 	)
Color_From_Falloff4interp	[ 0	locks=0 ]	(	[ Color_From_Falloff4interp	1 ] 	)
Color_From_Falloff5pos	[ 0	locks=0 ]	(	[ Color_From_Falloff5pos	0 ] 	)
Color_From_Falloff5c	[ 0	locks=0 ]	(	[ Color_From_Falloff5cr	0 ] 	[ Color_From_Falloff5cg	0 ] 	[ Color_From_Falloff5cb	0 ] 	)
Color_From_Falloff5interp	[ 0	locks=0 ]	(	[ Color_From_Falloff5interp	1 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Overlay.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Max.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Max.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 9.40216 3.81404
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	attribswap1 1 1 "input1"
}
inputs
{
0 	attribswap1 0 1
}
stat
{
  create 1520090169
  modify 1565234643
  author Mo@Mo-PC
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Max.multiparm"
Content-Type: text/plain

5
Color_From_Falloff#pos ../Color_From_Falloff#pos
Color_From_Falloff#cr ../Color_From_Falloff#cr
Color_From_Falloff#cg ../Color_From_Falloff#cg
Color_From_Falloff#cb ../Color_From_Falloff#cb
Color_From_Falloff#interp ../Color_From_Falloff#interp

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Max.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "Color_From_Falloff"
        label   "Color From Falloff"
        type    ramp_rgb
        default { "2" }
        range   { 1! 10 }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Max.chn"
Content-Type: text/plain

{
    channel Color_From_Falloff1pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1pos\") }
    }
    channel Color_From_Falloff1cr {
      lefttype = extend
      righttype = extend
      default = 0.89999997615814209
      flags = 0
      segment { length = 0 value = 0.89999997615814209 0.89999997615814209 expr = ch(\"../Color_From_Falloff1cr\") }
    }
    channel Color_From_Falloff1cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1cg\") }
    }
    channel Color_From_Falloff1cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1cb\") }
    }
    channel Color_From_Falloff1interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff1interp\") }
    }
    channel Color_From_Falloff2pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2pos\") }
    }
    channel Color_From_Falloff2cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cr\") }
    }
    channel Color_From_Falloff2cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cg\") }
    }
    channel Color_From_Falloff2cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cb\") }
    }
    channel Color_From_Falloff2interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff2interp\") }
    }
    channel Color_From_Falloff {
      lefttype = extend
      righttype = extend
      default = 5
      flags = 0
      segment { length = 0 value = 5 5 expr = ch(\"../Color_From_Falloff\") }
    }
    channel Color_From_Falloff3pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3pos\") }
    }
    channel Color_From_Falloff3cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cr\") }
    }
    channel Color_From_Falloff3cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cg\") }
    }
    channel Color_From_Falloff3cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cb\") }
    }
    channel Color_From_Falloff3interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff3interp\") }
    }
    channel Color_From_Falloff4pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4pos\") }
    }
    channel Color_From_Falloff4cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cr\") }
    }
    channel Color_From_Falloff4cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cg\") }
    }
    channel Color_From_Falloff4cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cb\") }
    }
    channel Color_From_Falloff4interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff4interp\") }
    }
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Set/grouptype\") }
    }
    channel Color_From_Falloff5pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5pos\") }
    }
    channel Color_From_Falloff5cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cr\") }
    }
    channel Color_From_Falloff5cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cg\") }
    }
    channel Color_From_Falloff5cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cb\") }
    }
    channel Color_From_Falloff5interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff5interp\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Max.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	`chs(\"../Set/group\")`	)
grouptype	[ 8	locks=0 ]	(	[ grouptype	0 ] 	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"if(haspointattrib(0, \"Cd\") == 0)
    v@Cd = {0,0,0};

vector b = chramp(\"Color_From_Falloff\", f@mops_falloff);
vector a = v@Cd;


v@Cd = max(a,b);"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
folder1	[ 0	locks=0 ]	(	0	0	)
Color_From_Falloff	[ 0	locks=0 ]	(	[ Color_From_Falloff	5 ] 	)
Color_From_Falloff1pos	[ 0	locks=0 ]	(	[ Color_From_Falloff1pos	0 ] 	)
Color_From_Falloff1c	[ 0	locks=0 ]	(	[ Color_From_Falloff1cr	0.89999997615814209 ] 	[ Color_From_Falloff1cg	0 ] 	[ Color_From_Falloff1cb	0 ] 	)
Color_From_Falloff1interp	[ 0	locks=0 ]	(	[ Color_From_Falloff1interp	1 ] 	)
Color_From_Falloff2pos	[ 0	locks=0 ]	(	[ Color_From_Falloff2pos	0.25 ] 	)
Color_From_Falloff2c	[ 0	locks=0 ]	(	[ Color_From_Falloff2cr	0.89999997615814209 ] 	[ Color_From_Falloff2cg	0.89999997615814209 ] 	[ Color_From_Falloff2cb	0 ] 	)
Color_From_Falloff2interp	[ 0	locks=0 ]	(	[ Color_From_Falloff2interp	1 ] 	)
Color_From_Falloff3pos	[ 0	locks=0 ]	(	[ Color_From_Falloff3pos	0.5 ] 	)
Color_From_Falloff3c	[ 0	locks=0 ]	(	[ Color_From_Falloff3cr	0 ] 	[ Color_From_Falloff3cg	0.89999997615814209 ] 	[ Color_From_Falloff3cb	0 ] 	)
Color_From_Falloff3interp	[ 0	locks=0 ]	(	[ Color_From_Falloff3interp	1 ] 	)
Color_From_Falloff4pos	[ 0	locks=0 ]	(	[ Color_From_Falloff4pos	0.75 ] 	)
Color_From_Falloff4c	[ 0	locks=0 ]	(	[ Color_From_Falloff4cr	0 ] 	[ Color_From_Falloff4cg	0.89999997615814209 ] 	[ Color_From_Falloff4cb	0.89999997615814209 ] 	)
Color_From_Falloff4interp	[ 0	locks=0 ]	(	[ Color_From_Falloff4interp	1 ] 	)
Color_From_Falloff5pos	[ 0	locks=0 ]	(	[ Color_From_Falloff5pos	0 ] 	)
Color_From_Falloff5c	[ 0	locks=0 ]	(	[ Color_From_Falloff5cr	0 ] 	[ Color_From_Falloff5cg	0 ] 	[ Color_From_Falloff5cb	0 ] 	)
Color_From_Falloff5interp	[ 0	locks=0 ]	(	[ Color_From_Falloff5interp	1 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Max.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Min.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Min.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 12.0466 3.81404
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	attribswap1 1 1 "input1"
}
inputs
{
0 	attribswap1 0 1
}
stat
{
  create 1520090169
  modify 1565234643
  author Mo@Mo-PC
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Min.multiparm"
Content-Type: text/plain

5
Color_From_Falloff#pos ../Color_From_Falloff#pos
Color_From_Falloff#cr ../Color_From_Falloff#cr
Color_From_Falloff#cg ../Color_From_Falloff#cg
Color_From_Falloff#cb ../Color_From_Falloff#cb
Color_From_Falloff#interp ../Color_From_Falloff#interp

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Min.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "Color_From_Falloff"
        label   "Color From Falloff"
        type    ramp_rgb
        default { "2" }
        range   { 1! 10 }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Min.chn"
Content-Type: text/plain

{
    channel Color_From_Falloff1pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1pos\") }
    }
    channel Color_From_Falloff1cr {
      lefttype = extend
      righttype = extend
      default = 0.89999997615814209
      flags = 0
      segment { length = 0 value = 0.89999997615814209 0.89999997615814209 expr = ch(\"../Color_From_Falloff1cr\") }
    }
    channel Color_From_Falloff1cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1cg\") }
    }
    channel Color_From_Falloff1cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1cb\") }
    }
    channel Color_From_Falloff1interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff1interp\") }
    }
    channel Color_From_Falloff2pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2pos\") }
    }
    channel Color_From_Falloff2cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cr\") }
    }
    channel Color_From_Falloff2cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cg\") }
    }
    channel Color_From_Falloff2cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cb\") }
    }
    channel Color_From_Falloff2interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff2interp\") }
    }
    channel Color_From_Falloff {
      lefttype = extend
      righttype = extend
      default = 5
      flags = 0
      segment { length = 0 value = 5 5 expr = ch(\"../Color_From_Falloff\") }
    }
    channel Color_From_Falloff3pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3pos\") }
    }
    channel Color_From_Falloff3cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cr\") }
    }
    channel Color_From_Falloff3cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cg\") }
    }
    channel Color_From_Falloff3cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cb\") }
    }
    channel Color_From_Falloff3interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff3interp\") }
    }
    channel Color_From_Falloff4pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4pos\") }
    }
    channel Color_From_Falloff4cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cr\") }
    }
    channel Color_From_Falloff4cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cg\") }
    }
    channel Color_From_Falloff4cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cb\") }
    }
    channel Color_From_Falloff4interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff4interp\") }
    }
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Set/grouptype\") }
    }
    channel Color_From_Falloff5pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5pos\") }
    }
    channel Color_From_Falloff5cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cr\") }
    }
    channel Color_From_Falloff5cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cg\") }
    }
    channel Color_From_Falloff5cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cb\") }
    }
    channel Color_From_Falloff5interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff5interp\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Min.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	`chs(\"../Set/group\")`	)
grouptype	[ 8	locks=0 ]	(	[ grouptype	0 ] 	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"if(haspointattrib(0, \"Cd\") == 0)
    v@Cd = {0,0,0};

vector b = chramp(\"Color_From_Falloff\", f@mops_falloff);
vector a = v@Cd;


v@Cd = min(a,b);"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
folder1	[ 0	locks=0 ]	(	0	0	)
Color_From_Falloff	[ 0	locks=0 ]	(	[ Color_From_Falloff	5 ] 	)
Color_From_Falloff1pos	[ 0	locks=0 ]	(	[ Color_From_Falloff1pos	0 ] 	)
Color_From_Falloff1c	[ 0	locks=0 ]	(	[ Color_From_Falloff1cr	0.89999997615814209 ] 	[ Color_From_Falloff1cg	0 ] 	[ Color_From_Falloff1cb	0 ] 	)
Color_From_Falloff1interp	[ 0	locks=0 ]	(	[ Color_From_Falloff1interp	1 ] 	)
Color_From_Falloff2pos	[ 0	locks=0 ]	(	[ Color_From_Falloff2pos	0.25 ] 	)
Color_From_Falloff2c	[ 0	locks=0 ]	(	[ Color_From_Falloff2cr	0.89999997615814209 ] 	[ Color_From_Falloff2cg	0.89999997615814209 ] 	[ Color_From_Falloff2cb	0 ] 	)
Color_From_Falloff2interp	[ 0	locks=0 ]	(	[ Color_From_Falloff2interp	1 ] 	)
Color_From_Falloff3pos	[ 0	locks=0 ]	(	[ Color_From_Falloff3pos	0.5 ] 	)
Color_From_Falloff3c	[ 0	locks=0 ]	(	[ Color_From_Falloff3cr	0 ] 	[ Color_From_Falloff3cg	0.89999997615814209 ] 	[ Color_From_Falloff3cb	0 ] 	)
Color_From_Falloff3interp	[ 0	locks=0 ]	(	[ Color_From_Falloff3interp	1 ] 	)
Color_From_Falloff4pos	[ 0	locks=0 ]	(	[ Color_From_Falloff4pos	0.75 ] 	)
Color_From_Falloff4c	[ 0	locks=0 ]	(	[ Color_From_Falloff4cr	0 ] 	[ Color_From_Falloff4cg	0.89999997615814209 ] 	[ Color_From_Falloff4cb	0.89999997615814209 ] 	)
Color_From_Falloff4interp	[ 0	locks=0 ]	(	[ Color_From_Falloff4interp	1 ] 	)
Color_From_Falloff5pos	[ 0	locks=0 ]	(	[ Color_From_Falloff5pos	0 ] 	)
Color_From_Falloff5c	[ 0	locks=0 ]	(	[ Color_From_Falloff5cr	0 ] 	[ Color_From_Falloff5cg	0 ] 	[ Color_From_Falloff5cb	0 ] 	)
Color_From_Falloff5interp	[ 0	locks=0 ]	(	[ Color_From_Falloff5interp	1 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Min.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Hue.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Hue.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 14.9729 3.81404
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	attribswap1 1 1 "input1"
}
inputs
{
0 	attribswap1 0 1
}
stat
{
  create 1520090169
  modify 1565234643
  author Mo@Mo-PC
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Hue.multiparm"
Content-Type: text/plain

5
Color_From_Falloff#pos ../Color_From_Falloff#pos
Color_From_Falloff#cr ../Color_From_Falloff#cr
Color_From_Falloff#cg ../Color_From_Falloff#cg
Color_From_Falloff#cb ../Color_From_Falloff#cb
Color_From_Falloff#interp ../Color_From_Falloff#interp

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Hue.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "Color_From_Falloff"
        label   "Color From Falloff"
        type    ramp_rgb
        default { "2" }
        range   { 1! 10 }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Hue.chn"
Content-Type: text/plain

{
    channel Color_From_Falloff1pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1pos\") }
    }
    channel Color_From_Falloff1cr {
      lefttype = extend
      righttype = extend
      default = 0.89999997615814209
      flags = 0
      segment { length = 0 value = 0.89999997615814209 0.89999997615814209 expr = ch(\"../Color_From_Falloff1cr\") }
    }
    channel Color_From_Falloff1cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1cg\") }
    }
    channel Color_From_Falloff1cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1cb\") }
    }
    channel Color_From_Falloff1interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff1interp\") }
    }
    channel Color_From_Falloff2pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2pos\") }
    }
    channel Color_From_Falloff2cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cr\") }
    }
    channel Color_From_Falloff2cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cg\") }
    }
    channel Color_From_Falloff2cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cb\") }
    }
    channel Color_From_Falloff2interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff2interp\") }
    }
    channel Color_From_Falloff {
      lefttype = extend
      righttype = extend
      default = 5
      flags = 0
      segment { length = 0 value = 5 5 expr = ch(\"../Color_From_Falloff\") }
    }
    channel Color_From_Falloff3pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3pos\") }
    }
    channel Color_From_Falloff3cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cr\") }
    }
    channel Color_From_Falloff3cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cg\") }
    }
    channel Color_From_Falloff3cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cb\") }
    }
    channel Color_From_Falloff3interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff3interp\") }
    }
    channel Color_From_Falloff4pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4pos\") }
    }
    channel Color_From_Falloff4cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cr\") }
    }
    channel Color_From_Falloff4cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cg\") }
    }
    channel Color_From_Falloff4cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cb\") }
    }
    channel Color_From_Falloff4interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff4interp\") }
    }
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Set/grouptype\") }
    }
    channel Color_From_Falloff5pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5pos\") }
    }
    channel Color_From_Falloff5cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cr\") }
    }
    channel Color_From_Falloff5cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cg\") }
    }
    channel Color_From_Falloff5cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cb\") }
    }
    channel Color_From_Falloff5interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff5interp\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Hue.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	`chs(\"../Set/group\")`	)
grouptype	[ 8	locks=0 ]	(	[ grouptype	0 ] 	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"if(haspointattrib(0, \"Cd\") == 0)
    v@Cd = {0,0,0};

vector b = chramp(\"Color_From_Falloff\", f@mops_falloff);
b = rgbtohsv(b);
vector a = rgbtohsv(v@Cd);

vector c = set(b.x, a.y, a.z);

v@Cd = hsvtorgb(c);"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
folder1	[ 0	locks=0 ]	(	0	0	)
Color_From_Falloff	[ 0	locks=0 ]	(	[ Color_From_Falloff	5 ] 	)
Color_From_Falloff1pos	[ 0	locks=0 ]	(	[ Color_From_Falloff1pos	0 ] 	)
Color_From_Falloff1c	[ 0	locks=0 ]	(	[ Color_From_Falloff1cr	0.89999997615814209 ] 	[ Color_From_Falloff1cg	0 ] 	[ Color_From_Falloff1cb	0 ] 	)
Color_From_Falloff1interp	[ 0	locks=0 ]	(	[ Color_From_Falloff1interp	1 ] 	)
Color_From_Falloff2pos	[ 0	locks=0 ]	(	[ Color_From_Falloff2pos	0.25 ] 	)
Color_From_Falloff2c	[ 0	locks=0 ]	(	[ Color_From_Falloff2cr	0.89999997615814209 ] 	[ Color_From_Falloff2cg	0.89999997615814209 ] 	[ Color_From_Falloff2cb	0 ] 	)
Color_From_Falloff2interp	[ 0	locks=0 ]	(	[ Color_From_Falloff2interp	1 ] 	)
Color_From_Falloff3pos	[ 0	locks=0 ]	(	[ Color_From_Falloff3pos	0.5 ] 	)
Color_From_Falloff3c	[ 0	locks=0 ]	(	[ Color_From_Falloff3cr	0 ] 	[ Color_From_Falloff3cg	0.89999997615814209 ] 	[ Color_From_Falloff3cb	0 ] 	)
Color_From_Falloff3interp	[ 0	locks=0 ]	(	[ Color_From_Falloff3interp	1 ] 	)
Color_From_Falloff4pos	[ 0	locks=0 ]	(	[ Color_From_Falloff4pos	0.75 ] 	)
Color_From_Falloff4c	[ 0	locks=0 ]	(	[ Color_From_Falloff4cr	0 ] 	[ Color_From_Falloff4cg	0.89999997615814209 ] 	[ Color_From_Falloff4cb	0.89999997615814209 ] 	)
Color_From_Falloff4interp	[ 0	locks=0 ]	(	[ Color_From_Falloff4interp	1 ] 	)
Color_From_Falloff5pos	[ 0	locks=0 ]	(	[ Color_From_Falloff5pos	0 ] 	)
Color_From_Falloff5c	[ 0	locks=0 ]	(	[ Color_From_Falloff5cr	0 ] 	[ Color_From_Falloff5cg	0 ] 	[ Color_From_Falloff5cb	0 ] 	)
Color_From_Falloff5interp	[ 0	locks=0 ]	(	[ Color_From_Falloff5interp	1 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Hue.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Saturation.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Saturation.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 18.0155 3.81404
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	attribswap1 1 1 "input1"
}
inputs
{
0 	attribswap1 0 1
}
stat
{
  create 1520090169
  modify 1565234643
  author Mo@Mo-PC
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Saturation.multiparm"
Content-Type: text/plain

5
Color_From_Falloff#pos ../Color_From_Falloff#pos
Color_From_Falloff#cr ../Color_From_Falloff#cr
Color_From_Falloff#cg ../Color_From_Falloff#cg
Color_From_Falloff#cb ../Color_From_Falloff#cb
Color_From_Falloff#interp ../Color_From_Falloff#interp

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Saturation.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "Color_From_Falloff"
        label   "Color From Falloff"
        type    ramp_rgb
        default { "2" }
        range   { 1! 10 }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Saturation.chn"
Content-Type: text/plain

{
    channel Color_From_Falloff1pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1pos\") }
    }
    channel Color_From_Falloff1cr {
      lefttype = extend
      righttype = extend
      default = 0.89999997615814209
      flags = 0
      segment { length = 0 value = 0.89999997615814209 0.89999997615814209 expr = ch(\"../Color_From_Falloff1cr\") }
    }
    channel Color_From_Falloff1cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1cg\") }
    }
    channel Color_From_Falloff1cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1cb\") }
    }
    channel Color_From_Falloff1interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff1interp\") }
    }
    channel Color_From_Falloff2pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2pos\") }
    }
    channel Color_From_Falloff2cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cr\") }
    }
    channel Color_From_Falloff2cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cg\") }
    }
    channel Color_From_Falloff2cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cb\") }
    }
    channel Color_From_Falloff2interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff2interp\") }
    }
    channel Color_From_Falloff {
      lefttype = extend
      righttype = extend
      default = 5
      flags = 0
      segment { length = 0 value = 5 5 expr = ch(\"../Color_From_Falloff\") }
    }
    channel Color_From_Falloff3pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3pos\") }
    }
    channel Color_From_Falloff3cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cr\") }
    }
    channel Color_From_Falloff3cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cg\") }
    }
    channel Color_From_Falloff3cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cb\") }
    }
    channel Color_From_Falloff3interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff3interp\") }
    }
    channel Color_From_Falloff4pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4pos\") }
    }
    channel Color_From_Falloff4cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cr\") }
    }
    channel Color_From_Falloff4cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cg\") }
    }
    channel Color_From_Falloff4cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cb\") }
    }
    channel Color_From_Falloff4interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff4interp\") }
    }
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Set/grouptype\") }
    }
    channel Color_From_Falloff5pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5pos\") }
    }
    channel Color_From_Falloff5cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cr\") }
    }
    channel Color_From_Falloff5cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cg\") }
    }
    channel Color_From_Falloff5cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cb\") }
    }
    channel Color_From_Falloff5interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff5interp\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Saturation.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	`chs(\"../Set/group\")`	)
grouptype	[ 8	locks=0 ]	(	[ grouptype	0 ] 	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"if(haspointattrib(0, \"Cd\") == 0)
    v@Cd = {0,0,0};

vector b = chramp(\"Color_From_Falloff\", f@mops_falloff);
b = rgbtohsv(b);
vector a = rgbtohsv(v@Cd);

vector c = set(a.x, b.y, a.z);

v@Cd = hsvtorgb(c);"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
folder1	[ 0	locks=0 ]	(	0	0	)
Color_From_Falloff	[ 0	locks=0 ]	(	[ Color_From_Falloff	5 ] 	)
Color_From_Falloff1pos	[ 0	locks=0 ]	(	[ Color_From_Falloff1pos	0 ] 	)
Color_From_Falloff1c	[ 0	locks=0 ]	(	[ Color_From_Falloff1cr	0.89999997615814209 ] 	[ Color_From_Falloff1cg	0 ] 	[ Color_From_Falloff1cb	0 ] 	)
Color_From_Falloff1interp	[ 0	locks=0 ]	(	[ Color_From_Falloff1interp	1 ] 	)
Color_From_Falloff2pos	[ 0	locks=0 ]	(	[ Color_From_Falloff2pos	0.25 ] 	)
Color_From_Falloff2c	[ 0	locks=0 ]	(	[ Color_From_Falloff2cr	0.89999997615814209 ] 	[ Color_From_Falloff2cg	0.89999997615814209 ] 	[ Color_From_Falloff2cb	0 ] 	)
Color_From_Falloff2interp	[ 0	locks=0 ]	(	[ Color_From_Falloff2interp	1 ] 	)
Color_From_Falloff3pos	[ 0	locks=0 ]	(	[ Color_From_Falloff3pos	0.5 ] 	)
Color_From_Falloff3c	[ 0	locks=0 ]	(	[ Color_From_Falloff3cr	0 ] 	[ Color_From_Falloff3cg	0.89999997615814209 ] 	[ Color_From_Falloff3cb	0 ] 	)
Color_From_Falloff3interp	[ 0	locks=0 ]	(	[ Color_From_Falloff3interp	1 ] 	)
Color_From_Falloff4pos	[ 0	locks=0 ]	(	[ Color_From_Falloff4pos	0.75 ] 	)
Color_From_Falloff4c	[ 0	locks=0 ]	(	[ Color_From_Falloff4cr	0 ] 	[ Color_From_Falloff4cg	0.89999997615814209 ] 	[ Color_From_Falloff4cb	0.89999997615814209 ] 	)
Color_From_Falloff4interp	[ 0	locks=0 ]	(	[ Color_From_Falloff4interp	1 ] 	)
Color_From_Falloff5pos	[ 0	locks=0 ]	(	[ Color_From_Falloff5pos	0 ] 	)
Color_From_Falloff5c	[ 0	locks=0 ]	(	[ Color_From_Falloff5cr	0 ] 	[ Color_From_Falloff5cg	0 ] 	[ Color_From_Falloff5cb	0 ] 	)
Color_From_Falloff5interp	[ 0	locks=0 ]	(	[ Color_From_Falloff5interp	1 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Saturation.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Brightness.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Brightness.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 20.7969 3.81404
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	attribswap1 1 1 "input1"
}
inputs
{
0 	attribswap1 0 1
}
stat
{
  create 1520090169
  modify 1565234643
  author Mo@Mo-PC
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Brightness.multiparm"
Content-Type: text/plain

5
Color_From_Falloff#pos ../Color_From_Falloff#pos
Color_From_Falloff#cr ../Color_From_Falloff#cr
Color_From_Falloff#cg ../Color_From_Falloff#cg
Color_From_Falloff#cb ../Color_From_Falloff#cb
Color_From_Falloff#interp ../Color_From_Falloff#interp

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Brightness.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "Color_From_Falloff"
        label   "Color From Falloff"
        type    ramp_rgb
        default { "2" }
        range   { 1! 10 }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Brightness.chn"
Content-Type: text/plain

{
    channel Color_From_Falloff1pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1pos\") }
    }
    channel Color_From_Falloff1cr {
      lefttype = extend
      righttype = extend
      default = 0.89999997615814209
      flags = 0
      segment { length = 0 value = 0.89999997615814209 0.89999997615814209 expr = ch(\"../Color_From_Falloff1cr\") }
    }
    channel Color_From_Falloff1cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1cg\") }
    }
    channel Color_From_Falloff1cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1cb\") }
    }
    channel Color_From_Falloff1interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff1interp\") }
    }
    channel Color_From_Falloff2pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2pos\") }
    }
    channel Color_From_Falloff2cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cr\") }
    }
    channel Color_From_Falloff2cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cg\") }
    }
    channel Color_From_Falloff2cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cb\") }
    }
    channel Color_From_Falloff2interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff2interp\") }
    }
    channel Color_From_Falloff {
      lefttype = extend
      righttype = extend
      default = 5
      flags = 0
      segment { length = 0 value = 5 5 expr = ch(\"../Color_From_Falloff\") }
    }
    channel Color_From_Falloff3pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3pos\") }
    }
    channel Color_From_Falloff3cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cr\") }
    }
    channel Color_From_Falloff3cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cg\") }
    }
    channel Color_From_Falloff3cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cb\") }
    }
    channel Color_From_Falloff3interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff3interp\") }
    }
    channel Color_From_Falloff4pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4pos\") }
    }
    channel Color_From_Falloff4cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cr\") }
    }
    channel Color_From_Falloff4cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cg\") }
    }
    channel Color_From_Falloff4cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cb\") }
    }
    channel Color_From_Falloff4interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff4interp\") }
    }
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Set/grouptype\") }
    }
    channel Color_From_Falloff5pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5pos\") }
    }
    channel Color_From_Falloff5cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cr\") }
    }
    channel Color_From_Falloff5cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cg\") }
    }
    channel Color_From_Falloff5cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cb\") }
    }
    channel Color_From_Falloff5interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff5interp\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Brightness.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	`chs(\"../Set/group\")`	)
grouptype	[ 8	locks=0 ]	(	[ grouptype	0 ] 	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"if(haspointattrib(0, \"Cd\") == 0)
    v@Cd = {0,0,0};

vector b = chramp(\"Color_From_Falloff\", f@mops_falloff);
b = rgbtohsv(b);
vector a = rgbtohsv(v@Cd);

vector c = set(a.x, a.y, b.z);

v@Cd = hsvtorgb(c);"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
folder1	[ 0	locks=0 ]	(	0	0	)
Color_From_Falloff	[ 0	locks=0 ]	(	[ Color_From_Falloff	5 ] 	)
Color_From_Falloff1pos	[ 0	locks=0 ]	(	[ Color_From_Falloff1pos	0 ] 	)
Color_From_Falloff1c	[ 0	locks=0 ]	(	[ Color_From_Falloff1cr	0.89999997615814209 ] 	[ Color_From_Falloff1cg	0 ] 	[ Color_From_Falloff1cb	0 ] 	)
Color_From_Falloff1interp	[ 0	locks=0 ]	(	[ Color_From_Falloff1interp	1 ] 	)
Color_From_Falloff2pos	[ 0	locks=0 ]	(	[ Color_From_Falloff2pos	0.25 ] 	)
Color_From_Falloff2c	[ 0	locks=0 ]	(	[ Color_From_Falloff2cr	0.89999997615814209 ] 	[ Color_From_Falloff2cg	0.89999997615814209 ] 	[ Color_From_Falloff2cb	0 ] 	)
Color_From_Falloff2interp	[ 0	locks=0 ]	(	[ Color_From_Falloff2interp	1 ] 	)
Color_From_Falloff3pos	[ 0	locks=0 ]	(	[ Color_From_Falloff3pos	0.5 ] 	)
Color_From_Falloff3c	[ 0	locks=0 ]	(	[ Color_From_Falloff3cr	0 ] 	[ Color_From_Falloff3cg	0.89999997615814209 ] 	[ Color_From_Falloff3cb	0 ] 	)
Color_From_Falloff3interp	[ 0	locks=0 ]	(	[ Color_From_Falloff3interp	1 ] 	)
Color_From_Falloff4pos	[ 0	locks=0 ]	(	[ Color_From_Falloff4pos	0.75 ] 	)
Color_From_Falloff4c	[ 0	locks=0 ]	(	[ Color_From_Falloff4cr	0 ] 	[ Color_From_Falloff4cg	0.89999997615814209 ] 	[ Color_From_Falloff4cb	0.89999997615814209 ] 	)
Color_From_Falloff4interp	[ 0	locks=0 ]	(	[ Color_From_Falloff4interp	1 ] 	)
Color_From_Falloff5pos	[ 0	locks=0 ]	(	[ Color_From_Falloff5pos	0 ] 	)
Color_From_Falloff5c	[ 0	locks=0 ]	(	[ Color_From_Falloff5cr	0 ] 	[ Color_From_Falloff5cg	0 ] 	[ Color_From_Falloff5cb	0 ] 	)
Color_From_Falloff5interp	[ 0	locks=0 ]	(	[ Color_From_Falloff5interp	1 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Brightness.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Color.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Color.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 23.9113 3.81404
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	attribswap1 1 1 "input1"
}
inputs
{
0 	attribswap1 0 1
}
stat
{
  create 1520090169
  modify 1565234643
  author Mo@Mo-PC
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Color.multiparm"
Content-Type: text/plain

5
Color_From_Falloff#pos ../Color_From_Falloff#pos
Color_From_Falloff#cr ../Color_From_Falloff#cr
Color_From_Falloff#cg ../Color_From_Falloff#cg
Color_From_Falloff#cb ../Color_From_Falloff#cb
Color_From_Falloff#interp ../Color_From_Falloff#interp

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Color.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "Color_From_Falloff"
        label   "Color From Falloff"
        type    ramp_rgb
        default { "2" }
        range   { 1! 10 }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Color.chn"
Content-Type: text/plain

{
    channel Color_From_Falloff1pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1pos\") }
    }
    channel Color_From_Falloff1cr {
      lefttype = extend
      righttype = extend
      default = 0.89999997615814209
      flags = 0
      segment { length = 0 value = 0.89999997615814209 0.89999997615814209 expr = ch(\"../Color_From_Falloff1cr\") }
    }
    channel Color_From_Falloff1cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1cg\") }
    }
    channel Color_From_Falloff1cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff1cb\") }
    }
    channel Color_From_Falloff1interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff1interp\") }
    }
    channel Color_From_Falloff2pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2pos\") }
    }
    channel Color_From_Falloff2cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cr\") }
    }
    channel Color_From_Falloff2cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cg\") }
    }
    channel Color_From_Falloff2cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff2cb\") }
    }
    channel Color_From_Falloff2interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff2interp\") }
    }
    channel Color_From_Falloff {
      lefttype = extend
      righttype = extend
      default = 5
      flags = 0
      segment { length = 0 value = 5 5 expr = ch(\"../Color_From_Falloff\") }
    }
    channel Color_From_Falloff3pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3pos\") }
    }
    channel Color_From_Falloff3cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cr\") }
    }
    channel Color_From_Falloff3cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cg\") }
    }
    channel Color_From_Falloff3cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff3cb\") }
    }
    channel Color_From_Falloff3interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff3interp\") }
    }
    channel Color_From_Falloff4pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4pos\") }
    }
    channel Color_From_Falloff4cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cr\") }
    }
    channel Color_From_Falloff4cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cg\") }
    }
    channel Color_From_Falloff4cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff4cb\") }
    }
    channel Color_From_Falloff4interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff4interp\") }
    }
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Set/grouptype\") }
    }
    channel Color_From_Falloff5pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5pos\") }
    }
    channel Color_From_Falloff5cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cr\") }
    }
    channel Color_From_Falloff5cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cg\") }
    }
    channel Color_From_Falloff5cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Color_From_Falloff5cb\") }
    }
    channel Color_From_Falloff5interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Color_From_Falloff5interp\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Color.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	`chs(\"../Set/group\")`	)
grouptype	[ 8	locks=0 ]	(	[ grouptype	0 ] 	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"if(haspointattrib(0, \"Cd\") == 0)
    v@Cd = {0,0,0};

vector b = chramp(\"Color_From_Falloff\", f@mops_falloff);
b = rgbtohsv(b);
vector a = rgbtohsv(v@Cd);

vector c = set(b.x, b.y, a.z);

v@Cd = hsvtorgb(c);"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
folder1	[ 0	locks=0 ]	(	0	0	)
Color_From_Falloff	[ 0	locks=0 ]	(	[ Color_From_Falloff	5 ] 	)
Color_From_Falloff1pos	[ 0	locks=0 ]	(	[ Color_From_Falloff1pos	0 ] 	)
Color_From_Falloff1c	[ 0	locks=0 ]	(	[ Color_From_Falloff1cr	0.89999997615814209 ] 	[ Color_From_Falloff1cg	0 ] 	[ Color_From_Falloff1cb	0 ] 	)
Color_From_Falloff1interp	[ 0	locks=0 ]	(	[ Color_From_Falloff1interp	1 ] 	)
Color_From_Falloff2pos	[ 0	locks=0 ]	(	[ Color_From_Falloff2pos	0.25 ] 	)
Color_From_Falloff2c	[ 0	locks=0 ]	(	[ Color_From_Falloff2cr	0.89999997615814209 ] 	[ Color_From_Falloff2cg	0.89999997615814209 ] 	[ Color_From_Falloff2cb	0 ] 	)
Color_From_Falloff2interp	[ 0	locks=0 ]	(	[ Color_From_Falloff2interp	1 ] 	)
Color_From_Falloff3pos	[ 0	locks=0 ]	(	[ Color_From_Falloff3pos	0.5 ] 	)
Color_From_Falloff3c	[ 0	locks=0 ]	(	[ Color_From_Falloff3cr	0 ] 	[ Color_From_Falloff3cg	0.89999997615814209 ] 	[ Color_From_Falloff3cb	0 ] 	)
Color_From_Falloff3interp	[ 0	locks=0 ]	(	[ Color_From_Falloff3interp	1 ] 	)
Color_From_Falloff4pos	[ 0	locks=0 ]	(	[ Color_From_Falloff4pos	0.75 ] 	)
Color_From_Falloff4c	[ 0	locks=0 ]	(	[ Color_From_Falloff4cr	0 ] 	[ Color_From_Falloff4cg	0.89999997615814209 ] 	[ Color_From_Falloff4cb	0.89999997615814209 ] 	)
Color_From_Falloff4interp	[ 0	locks=0 ]	(	[ Color_From_Falloff4interp	1 ] 	)
Color_From_Falloff5pos	[ 0	locks=0 ]	(	[ Color_From_Falloff5pos	0 ] 	)
Color_From_Falloff5c	[ 0	locks=0 ]	(	[ Color_From_Falloff5cr	0 ] 	[ Color_From_Falloff5cg	0 ] 	[ Color_From_Falloff5cb	0 ] 	)
Color_From_Falloff5interp	[ 0	locks=0 ]	(	[ Color_From_Falloff5interp	1 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Color.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pointwrangle1.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pointwrangle1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 1.57652 0.267263
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch1 1 1 "input1"
}
inputs
{
0 	switch1 0 1
}
stat
{
  create 1522812784
  modify 1565234567
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pointwrangle1.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"v@mops_Cd_backup = @Cd;"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pointwrangle1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/IN.init"
Content-Type: text/plain

type = null
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/IN.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.00198719 6.14007
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	(0) "" 1 "input1"
}
inputs
{
0 	(0) 0 1
}
stat
{
  create 1520090123
  modify 1520091900
  author Mo@Mo-PC
  access 0777
}
color UT_Color RGB 0.6 0.7 0.77 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/IN.parm"
Content-Type: text/plain

{
version 0.8
copyinput	[ 0	locks=0 ]	(	"on"	)
cacheinput	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/IN.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"17.5.229"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT.init"
Content-Type: text/plain

type = null
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.00198719 -2.58831
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display on render on highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
0 	attribswap2 1 1 "input1"
}
inputs
{
0 	attribswap2 0 1
}
stat
{
  create 1520090123
  modify 1565234689
  author Mo@Mo-PC
  access 0777
}
color UT_Color RGB 0.6 0.7 0.77 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT.parm"
Content-Type: text/plain

{
version 0.8
copyinput	[ 0	locks=0 ]	(	"on"	)
cacheinput	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"17.5.229"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch1.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.0019872 1.33564
connectornextid 14
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	Set 1 1 "input1"
2 	Multiply 1 1 "input2"
3 	Add 1 1 "input3"
5 	Subtract 1 1 "input4"
4 	Divide 1 1 "input5"
6 	Screen 1 1 "input6"
7 	Overlay 1 1 "input7"
8 	Max 1 1 "input8"
9 	Min 1 1 "input9"
10 	Hue 1 1 "input10"
11 	Saturation 1 1 "input11"
12 	Brightness 1 1 "input12"
13 	Color 1 1 "input13"
}
inputs
{
0 	Set 0 1
1 	Multiply 0 1
2 	Add 0 1
3 	Subtract 0 1
4 	Divide 0 1
5 	Screen 0 1
6 	Overlay 0 1
7 	Max 0 1
8 	Min 0 1
9 	Hue 0 1
10 	Saturation 0 1
11 	Brightness 0 1
12 	Color 0 1
}
stat
{
  create 1520091888
  modify 1565234567
  author Mo@Mo-PC
  access 0777
}
color UT_Color RGB 0.8 1 0.7 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch1.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Mode\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch1.parm"
Content-Type: text/plain

{
version 0.8
input	[ 0	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"17.5.229"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch2.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch2.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.00198719 -0.426012
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch1 1 1 "input1"
2 	pointwrangle1 1 1 "input2"
}
inputs
{
0 	switch1 0 1
1 	pointwrangle1 0 1
}
stat
{
  create 1522812778
  modify 1565234567
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 1 0.7 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch2.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = "haspointattrib(\"../IN\", \"mops_Cd_backup\")" }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch2.parm"
Content-Type: text/plain

{
version 0.8
input	[ 8	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch2.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"17.5.229"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribswap1.init"
Content-Type: text/plain

type = attribswap
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribswap1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.00543719 5.27981
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	IN 1 1 "input1"
}
inputs
{
0 	IN 0 1
}
stat
{
  create 1565234627
  modify 1565234767
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribswap1.chn"
Content-Type: text/plain

{
    channel srcattribs1 {
      lefttype = extend
      righttype = extend
      defaultString = \"mops_falloff\"
      flags = 0
      segment { length = 0 expr = chs(\"../falloff_attr\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribswap1.parm"
Content-Type: text/plain

{
version 0.8
numswaps	[ 0	locks=0 ]	(	1	)
enable1	[ 0	locks=0 ]	(	"on"	)
method1	[ 0	locks=0 ]	(	"swap"	)
class1	[ 0	locks=0 ]	(	"point"	)
srcattribs1	[ 0	locks=0 ]	(	[ srcattribs1	butt ] 	)
dstattribs1	[ 0	locks=0 ]	(	mops_falloff	)
typeinfo1	[ 0	locks=0 ]	(	"dest"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribswap1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"17.5.229"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribswap2.init"
Content-Type: text/plain

type = attribswap
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribswap2.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.0139618 -1.48561
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch2 1 1 "input1"
}
inputs
{
0 	switch2 0 1
}
stat
{
  create 1565234627
  modify 1565234782
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribswap2.parm"
Content-Type: text/plain

{
version 0.8
numswaps	[ 0	locks=0 ]	(	1	)
enable1	[ 0	locks=0 ]	(	"on"	)
method1	[ 0	locks=0 ]	(	"swap"	)
class1	[ 0	locks=0 ]	(	"point"	)
srcattribs1	[ 0	locks=0 ]	(	mops_falloff	)
dstattribs1	[ 0	locks=0 ]	(	`chs(\"../attribswap1/srcattribs1\")`	)
typeinfo1	[ 0	locks=0 ]	(	"dest"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribswap2.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"17.5.229"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.order"
Content-Type: text/plain

20
Set
IN
OUT
Multiply
switch1
Add
Screen
Subtract
Divide
Overlay
Max
Min
Hue
Saturation
Brightness
Color
switch2
pointwrangle1
attribswap1
attribswap2

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.net"
Content-Type: text/plain

1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY--
