MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY"

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename=".OPfallbacks"
Content-Type: application/external-reference

.OPfallbacks

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename=".OPdummydefs"
Content-Type: application/external-reference

.OPdummydefs

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="node_type"
Content-Type: text/plain

Sop

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.init"
Content-Type: text/plain

type = MOPS::Noise_Patterns::1.2
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 0.131055 -4.48354
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	update_attrs 2 1 "input1"
}
inputs
{
0 	update_attrs 0 1
}
stat
{
  create 1586049942
  modify 1586107415
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.inp"
Content-Type: text/plain

1
0 0.003000004243105512 8.7641580403961363 2 0 __NO_OWNER_NETWORK_BOX__ "FROMOUTPUT"

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/__stickynote1.postitinit"
Content-Type: text/plain

type = postitnote
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/__stickynote1.postitdef"
Content-Type: text/plain

text "how to translate worley noise to 3d?"
position -9.72831 2.91733
size 2.5 2.5
flags = minimize off
stat
{
  create 1550122687
  modify 1550122701
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 1 0.969 0.522 
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Perlin.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Perlin.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -9.89785 0.248814
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	rest 0 1 "input1"
}
inputs
{
0 	rest 0 1
}
stat
{
  create 1524060463
  modify 1586108674
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Perlin.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "amp"
        label   "Amp"
        type    vector
        size    3
        default { "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "roughness"
        label   "Roughness"
        type    float
        default { "0" }
        range   { 0.0001! 1 }
    }
    parm {
        name    "octaves"
        label   "Octaves"
        type    integer
        default { "0" }
        range   { 1! 10 }
    }
    parm {
        name    "freq"
        label   "Freq"
        type    vector4
        size    4
        default { "0" "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "offset"
        label   "Offset"
        type    vector4
        size    4
        default { "0" "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "uniform"
        label   "Uniform"
        type    toggle
        default { "0" }
    }
    parm {
        name    "time_scale"
        label   "Time Scale"
        type    float
        default { "0" }
        range   { 0 1 }
    }
    parm {
        name    "time_varying"
        label   "Time Varying"
        type    toggle
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "vex_precision"
        baseparm
        label   "VEX Precision"
        export  none
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Perlin.chn"
Content-Type: text/plain

{
    channel group {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../group\") }
    }
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../grouptype\") }
    }
    channel freqx {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqx\") }
    }
    channel freqy {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqy\") }
    }
    channel freqz {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqz\") }
    }
    channel freqw {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqw\") }
    }
    channel uniform {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../uniform\") }
    }
    channel roughness {
      lefttype = extend
      righttype = extend
      default = 0.5
      flags = 0
      segment { length = 0 value = 0.5 0.5 expr = ch(\"../roughness\") }
    }
    channel octaves {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../octaves\") }
    }
    channel offsetx {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetx\") }
    }
    channel offsety {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsety\") }
    }
    channel offsetz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetz\") }
    }
    channel offsetw {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetw\") }
    }
    channel time_varying {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../time_varying\") }
    }
    channel time_scale {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../time_scale\") }
    }
    channel ampx {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampx\") }
    }
    channel ampy {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampy\") }
    }
    channel ampz {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampz\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Perlin.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0	autoscope=0 ]	(	0	0	)
group	[ 0	locks=0	autoscope=0 ]	(	[ group	__mops_orig ] 	)
grouptype	[ 0	locks=0	autoscope=0 ]	(	[ grouptype	0 ] 	)
class	[ 0	locks=0	autoscope=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0	autoscope=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0	autoscope=0 ]	(	1024	)
snippet	[ 0	locks=0	autoscope=0 ]	(	"vector4 pos = set(@P.x, @P.y, @P.z, 0);
vector4 freq = chp(\"freq\");
vector4 offset = chp(\"offset\");
vector amp = chv(\"amp\");
vector orig_amp = amp;

int oct = chi(\"octaves\");
float rough = chf(\"roughness\");

vector val = 0;
vector maxval = 0;

offset += p@time_offset;

if(chi(\"uniform\") == 1){
    freq = set(freq.x, freq.x, freq.x, freq.w);
}

for(int i = 0; i < oct; i++){
    vector4 npos = pos * freq + offset;
    vector nval = noise(npos);
    nval = fit(nval, 0, 1, -1, 1) * amp;
    val += nval;
    maxval += amp;
    amp *= rough;
    freq *= 2;
}

val /= maxval;

v@attr = val * orig_amp;"	)
exportlist	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_strict	[ 0	locks=0	autoscope=0 ]	(	"off"	)
autobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
bindings	[ 0	locks=0	autoscope=0 ]	(	1	)
groupautobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
groupbindings	[ 0	locks=0	autoscope=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0	autoscope=0 ]	(	.	)
vex_outputmask	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0	autoscope=0 ]	(	id	)
vex_inplace	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0	autoscope=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
amp	[ 8	locks=0	autoscope=0 ]	(	[ ampx	1 ] 	[ ampy	1 ] 	[ ampz	1 ] 	)
roughness	[ 0	locks=0	autoscope=0 ]	(	[ roughness	0.5 ] 	)
octaves	[ 0	locks=0	autoscope=0 ]	(	[ octaves	1 ] 	)
freq	[ 0	locks=0	autoscope=0 ]	(	[ freqx	1 ] 	[ freqy	1 ] 	[ freqz	1 ] 	[ freqw	1 ] 	)
offset	[ 0	locks=0	autoscope=0 ]	(	[ offsetx	0 ] 	[ offsety	0 ] 	[ offsetz	0 ] 	[ offsetw	0 ] 	)
uniform	[ 0	locks=0	autoscope=0 ]	(	[ uniform	0 ] 	)
time_scale	[ 0	locks=0	autoscope=0 ]	(	[ time_scale	1 ] 	)
time_varying	[ 0	locks=0	autoscope=0 ]	(	[ time_varying	0 ] 	)
bindname1	[ 0	locks=0 ]	(	__attr	)
bindparm1	[ 0	locks=0 ]	(	attr	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Perlin.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Simplex.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Simplex.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -6.3422 0.248814
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	rest 0 1 "input1"
}
inputs
{
0 	rest 0 1
}
stat
{
  create 1524060463
  modify 1586108671
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Simplex.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "amp"
        label   "Amp"
        type    vector
        size    3
        default { "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "roughness"
        label   "Roughness"
        type    float
        default { "0" }
        range   { 0.0001! 1 }
    }
    parm {
        name    "octaves"
        label   "Octaves"
        type    integer
        default { "0" }
        range   { 1! 10 }
    }
    parm {
        name    "freq"
        label   "Freq"
        type    vector4
        size    4
        default { "0" "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "offset"
        label   "Offset"
        type    vector4
        size    4
        default { "0" "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "uniform"
        label   "Uniform"
        type    integer
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "time_scale"
        label   "Time Scale"
        type    float
        default { "0" }
        range   { 0 1 }
    }
    parm {
        name    "time_varying"
        label   "Time Varying"
        type    toggle
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "vex_precision"
        baseparm
        label   "VEX Precision"
        export  none
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Simplex.chn"
Content-Type: text/plain

{
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Perlin/grouptype\") }
    }
    channel class {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../Perlin/class\") }
    }
    channel freqx {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqx\") }
    }
    channel freqy {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqy\") }
    }
    channel freqz {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqz\") }
    }
    channel freqw {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqw\") }
    }
    channel uniform {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../uniform\") }
    }
    channel roughness {
      lefttype = extend
      righttype = extend
      default = 0.5
      flags = 0
      segment { length = 0 value = 0.5 0.5 expr = ch(\"../roughness\") }
    }
    channel octaves {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../octaves\") }
    }
    channel offsetx {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetx\") }
    }
    channel offsety {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsety\") }
    }
    channel offsetz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetz\") }
    }
    channel offsetw {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetw\") }
    }
    channel time_varying {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../time_varying\") }
    }
    channel time_scale {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../time_scale\") }
    }
    channel ampx {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampx\") }
    }
    channel ampy {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampy\") }
    }
    channel ampz {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampz\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Simplex.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0	autoscope=0 ]	(	0	0	)
group	[ 0	locks=0	autoscope=0 ]	(	`chs(\"../Perlin/group\")`	)
grouptype	[ 8	locks=0	autoscope=0 ]	(	[ grouptype	0 ] 	)
class	[ 8	locks=0	autoscope=0 ]	(	[ class	2 ] 	)
vex_numcount	[ 0	locks=0	autoscope=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0	autoscope=0 ]	(	1024	)
snippet	[ 0	locks=0	autoscope=0 ]	(	"vector4 pos = set(@P.x, @P.y, @P.z, 0);
vector4 freq = chp(\"freq\");
vector4 offset = chp(\"offset\");
vector amp = chv(\"amp\");
vector orig_amp = amp;
int oct = chi(\"octaves\");
float rough = chf(\"roughness\");

vector val = 0;
vector maxval = 0;

offset += p@time_offset;

if(chi(\"uniform\") == 1){
    freq = set(freq.x, freq.x, freq.x, freq.w);
}

for(int i = 0; i < oct; i++){
    vector4 npos = pos * freq + offset;
    vector nval = xnoise(npos);
    nval = fit(nval, 0, 1, -1, 1) * amp;
    val += nval;
    maxval += amp;
    amp *= rough;
    freq *= 2;
}

val /= maxval;

v@attr = val * orig_amp;"	)
exportlist	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_strict	[ 0	locks=0	autoscope=0 ]	(	"off"	)
autobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
bindings	[ 0	locks=0	autoscope=0 ]	(	1	)
groupautobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
groupbindings	[ 0	locks=0	autoscope=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0	autoscope=0 ]	(	.	)
vex_outputmask	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0	autoscope=0 ]	(	id	)
vex_inplace	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0	autoscope=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
amp	[ 8	locks=0 ]	(	[ ampx	1 ] 	[ ampy	1 ] 	[ ampz	1 ] 	)
roughness	[ 0	locks=0	autoscope=0 ]	(	[ roughness	0.5 ] 	)
octaves	[ 0	locks=0	autoscope=0 ]	(	[ octaves	1 ] 	)
freq	[ 0	locks=0	autoscope=0 ]	(	[ freqx	1 ] 	[ freqy	1 ] 	[ freqz	1 ] 	[ freqw	1 ] 	)
offset	[ 0	locks=0	autoscope=0 ]	(	[ offsetx	0 ] 	[ offsety	0 ] 	[ offsetz	0 ] 	[ offsetw	0 ] 	)
uniform	[ 0	locks=0	autoscope=0 ]	(	[ uniform	0 ] 	)
time_scale	[ 0	locks=0	autoscope=0 ]	(	[ time_scale	1 ] 	)
time_varying	[ 0	locks=0	autoscope=0 ]	(	[ time_varying	0 ] 	)
bindname1	[ 0	locks=0 ]	(	__attr	)
bindparm1	[ 0	locks=0 ]	(	attr	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Simplex.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Worley_f2-f1.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Worley_f2-f1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -2.93159 0.248814
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	rest 0 1 "input1"
}
inputs
{
0 	rest 0 1
}
stat
{
  create 1524060463
  modify 1586108668
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Worley_f2-f1.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "amp"
        label   "Amp"
        type    vector
        size    3
        default { "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "roughness"
        label   "Roughness"
        type    float
        default { "0" }
        range   { 0.0001! 1 }
    }
    parm {
        name    "octaves"
        label   "Octaves"
        type    integer
        default { "0" }
        range   { 1! 10 }
    }
    parm {
        name    "freq"
        label   "Freq"
        type    vector4
        size    4
        default { "0" "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "offset"
        label   "Offset"
        type    vector4
        size    4
        default { "0" "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "uniform"
        label   "Uniform"
        type    integer
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "time_scale"
        label   "Time Scale"
        type    float
        default { "0" }
        range   { 0 1 }
    }
    parm {
        name    "time_varying"
        label   "Time Varying"
        type    toggle
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "vex_precision"
        baseparm
        label   "VEX Precision"
        export  none
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Worley_f2-f1.chn"
Content-Type: text/plain

{
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Perlin/grouptype\") }
    }
    channel class {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../Perlin/class\") }
    }
    channel freqx {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqx\") }
    }
    channel freqy {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqy\") }
    }
    channel freqz {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqz\") }
    }
    channel freqw {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqw\") }
    }
    channel uniform {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../uniform\") }
    }
    channel roughness {
      lefttype = extend
      righttype = extend
      default = 0.5
      flags = 0
      segment { length = 0 value = 0.5 0.5 expr = ch(\"../roughness\") }
    }
    channel octaves {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../octaves\") }
    }
    channel offsetx {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetx\") }
    }
    channel offsety {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsety\") }
    }
    channel offsetz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetz\") }
    }
    channel offsetw {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetw\") }
    }
    channel time_varying {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../time_varying\") }
    }
    channel time_scale {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../time_scale\") }
    }
    channel ampx {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampx\") }
    }
    channel ampy {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampy\") }
    }
    channel ampz {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampz\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Worley_f2-f1.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0	autoscope=0 ]	(	0	0	)
group	[ 0	locks=0	autoscope=0 ]	(	`chs(\"../Perlin/group\")`	)
grouptype	[ 8	locks=0	autoscope=0 ]	(	[ grouptype	0 ] 	)
class	[ 8	locks=0	autoscope=0 ]	(	[ class	2 ] 	)
vex_numcount	[ 0	locks=0	autoscope=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0	autoscope=0 ]	(	1024	)
snippet	[ 0	locks=0	autoscope=0 ]	(	"vector4 pos = set(@P.x, @P.y, @P.z, 0);
vector4 freq = chp(\"freq\");
vector4 offset = chp(\"offset\");
vector amp = chv(\"amp\");
vector orig_amp = amp;

int oct = chi(\"octaves\");
float rough = chf(\"roughness\");

vector4 val = 0;
vector4 maxval = 0;
float f1, f2;
vector4 v1, v2;
int seed;
vector4 jitter = 1;

offset += p@time_offset;

if(chi(\"uniform\") == 1){
    freq = set(freq.x, freq.x, freq.x, freq.w);
}


for(int i = 0; i < oct; i++){
    vector4 npos = pos * freq + offset;
    vnoise(npos, jitter, seed, f1, f2, v1, v2);
    vector nval = normalize(vector(v2)-vector(v1)) * (f2-f1); 
    //nval = fit(nval, -1, 1, 0, 1);
    nval *= amp;
    val += nval;
    freq *= 2;
    amp *= rough;
    maxval += amp;
    
}

val /= maxval;

v@attr = vector(val) * orig_amp;"	)
exportlist	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_strict	[ 0	locks=0	autoscope=0 ]	(	"off"	)
autobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
bindings	[ 0	locks=0	autoscope=0 ]	(	1	)
groupautobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
groupbindings	[ 0	locks=0	autoscope=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0	autoscope=0 ]	(	.	)
vex_outputmask	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0	autoscope=0 ]	(	id	)
vex_inplace	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0	autoscope=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
amp	[ 8	locks=0 ]	(	[ ampx	1 ] 	[ ampy	1 ] 	[ ampz	1 ] 	)
roughness	[ 0	locks=0	autoscope=0 ]	(	[ roughness	0.5 ] 	)
octaves	[ 0	locks=0	autoscope=0 ]	(	[ octaves	1 ] 	)
freq	[ 0	locks=0	autoscope=0 ]	(	[ freqx	1 ] 	[ freqy	1 ] 	[ freqz	1 ] 	[ freqw	1 ] 	)
offset	[ 0	locks=0	autoscope=0 ]	(	[ offsetx	0 ] 	[ offsety	0 ] 	[ offsetz	0 ] 	[ offsetw	0 ] 	)
uniform	[ 0	locks=0	autoscope=0 ]	(	[ uniform	0 ] 	)
time_scale	[ 0	locks=0	autoscope=0 ]	(	[ time_scale	1 ] 	)
time_varying	[ 0	locks=0	autoscope=0 ]	(	[ time_varying	0 ] 	)
bindname1	[ 0	locks=0 ]	(	__attr	)
bindparm1	[ 0	locks=0 ]	(	attr	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Worley_f2-f1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Worley_f1.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Worley_f1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 0.307091 0.248814
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	rest 0 1 "input1"
}
inputs
{
0 	rest 0 1
}
stat
{
  create 1524060463
  modify 1586108660
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Worley_f1.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "amp"
        label   "Amp"
        type    vector
        size    3
        default { "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "roughness"
        label   "Roughness"
        type    float
        default { "0" }
        range   { 0.0001! 1 }
    }
    parm {
        name    "octaves"
        label   "Octaves"
        type    integer
        default { "0" }
        range   { 1! 10 }
    }
    parm {
        name    "freq"
        label   "Freq"
        type    vector4
        size    4
        default { "0" "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "offset"
        label   "Offset"
        type    vector4
        size    4
        default { "0" "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "uniform"
        label   "Uniform"
        type    integer
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "time_scale"
        label   "Time Scale"
        type    float
        default { "0" }
        range   { 0 1 }
    }
    parm {
        name    "time_varying"
        label   "Time Varying"
        type    toggle
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "vex_precision"
        baseparm
        label   "VEX Precision"
        export  none
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Worley_f1.chn"
Content-Type: text/plain

{
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Perlin/grouptype\") }
    }
    channel class {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../Perlin/class\") }
    }
    channel freqx {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqx\") }
    }
    channel freqy {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqy\") }
    }
    channel freqz {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqz\") }
    }
    channel freqw {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqw\") }
    }
    channel uniform {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../uniform\") }
    }
    channel roughness {
      lefttype = extend
      righttype = extend
      default = 0.5
      flags = 0
      segment { length = 0 value = 0.5 0.5 expr = ch(\"../roughness\") }
    }
    channel octaves {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../octaves\") }
    }
    channel offsetx {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetx\") }
    }
    channel offsety {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsety\") }
    }
    channel offsetz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetz\") }
    }
    channel offsetw {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetw\") }
    }
    channel time_varying {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../time_varying\") }
    }
    channel time_scale {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../time_scale\") }
    }
    channel ampx {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampx\") }
    }
    channel ampy {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampy\") }
    }
    channel ampz {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampz\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Worley_f1.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0	autoscope=0 ]	(	0	0	)
group	[ 0	locks=0	autoscope=0 ]	(	`chs(\"../Perlin/group\")`	)
grouptype	[ 8	locks=0	autoscope=0 ]	(	[ grouptype	0 ] 	)
class	[ 8	locks=0	autoscope=0 ]	(	[ class	2 ] 	)
vex_numcount	[ 0	locks=0	autoscope=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0	autoscope=0 ]	(	1024	)
snippet	[ 0	locks=0	autoscope=0 ]	(	"vector4 pos = set(@P.x, @P.y, @P.z, 0);
vector4 freq = chp(\"freq\");
vector4 offset = chp(\"offset\");
vector amp = chv(\"amp\");
vector orig_amp = amp;

int oct = chi(\"octaves\");
float rough = chf(\"roughness\");

vector4 val = 0;
vector4 maxval = 0;
float f1, f2;
vector4 v1, v2;
int seed;
vector4 jitter = 1;

offset += p@time_offset;


if(chi(\"uniform\") == 1){
    freq = set(freq.x, freq.x, freq.x, freq.w);
}


for(int i = 0; i < oct; i++){    
    vector4 npos = pos * freq + offset;
    vnoise(npos, jitter, seed+i, f1, f2, v1, v2);
    vector nval = normalize(vector(v1)-vector(v2)) * (f1); 
    nval *= amp;
    val += nval;
    maxval += amp;
    freq *= 2;
    amp *= rough;
    
}

val /= maxval;

v@attr = vector(val) * orig_amp;"	)
exportlist	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_strict	[ 0	locks=0	autoscope=0 ]	(	"off"	)
autobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
bindings	[ 0	locks=0	autoscope=0 ]	(	1	)
groupautobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
groupbindings	[ 0	locks=0	autoscope=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0	autoscope=0 ]	(	.	)
vex_outputmask	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0	autoscope=0 ]	(	id	)
vex_inplace	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0	autoscope=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
amp	[ 8	locks=0 ]	(	[ ampx	1 ] 	[ ampy	1 ] 	[ ampz	1 ] 	)
roughness	[ 0	locks=0	autoscope=0 ]	(	[ roughness	0.5 ] 	)
octaves	[ 0	locks=0	autoscope=0 ]	(	[ octaves	1 ] 	)
freq	[ 0	locks=0	autoscope=0 ]	(	[ freqx	1 ] 	[ freqy	1 ] 	[ freqz	1 ] 	[ freqw	1 ] 	)
offset	[ 0	locks=0	autoscope=0 ]	(	[ offsetx	0 ] 	[ offsety	0 ] 	[ offsetz	0 ] 	[ offsetw	0 ] 	)
uniform	[ 0	locks=0	autoscope=0 ]	(	[ uniform	0 ] 	)
time_scale	[ 0	locks=0	autoscope=0 ]	(	[ time_scale	1 ] 	)
time_varying	[ 0	locks=0	autoscope=0 ]	(	[ time_varying	0 ] 	)
bindname1	[ 0	locks=0 ]	(	__attr	)
bindparm1	[ 0	locks=0 ]	(	attr	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Worley_f1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Worley_f2.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Worley_f2.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 3.91832 0.248814
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	rest 0 1 "input1"
}
inputs
{
0 	rest 0 1
}
stat
{
  create 1524060463
  modify 1586108656
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Worley_f2.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "amp"
        label   "Amp"
        type    vector
        size    3
        default { "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "roughness"
        label   "Roughness"
        type    float
        default { "0" }
        range   { 0.0001! 1 }
    }
    parm {
        name    "octaves"
        label   "Octaves"
        type    integer
        default { "0" }
        range   { 1! 10 }
    }
    parm {
        name    "freq"
        label   "Freq"
        type    vector4
        size    4
        default { "0" "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "offset"
        label   "Offset"
        type    vector4
        size    4
        default { "0" "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "uniform"
        label   "Uniform"
        type    toggle
        default { "0" }
    }
    parm {
        name    "time_scale"
        label   "Time Scale"
        type    float
        default { "0" }
        range   { 0 1 }
    }
    parm {
        name    "time_varying"
        label   "Time Varying"
        type    toggle
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "vex_precision"
        baseparm
        label   "VEX Precision"
        export  none
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Worley_f2.chn"
Content-Type: text/plain

{
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Perlin/grouptype\") }
    }
    channel class {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../Perlin/class\") }
    }
    channel freqx {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqx\") }
    }
    channel freqy {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqy\") }
    }
    channel freqz {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqz\") }
    }
    channel freqw {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqw\") }
    }
    channel uniform {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../uniform\") }
    }
    channel roughness {
      lefttype = extend
      righttype = extend
      default = 0.5
      flags = 0
      segment { length = 0 value = 0.5 0.5 expr = ch(\"../roughness\") }
    }
    channel octaves {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../octaves\") }
    }
    channel offsetx {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetx\") }
    }
    channel offsety {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsety\") }
    }
    channel offsetz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetz\") }
    }
    channel offsetw {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetw\") }
    }
    channel time_varying {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../time_varying\") }
    }
    channel time_scale {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../time_scale\") }
    }
    channel ampx {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampx\") }
    }
    channel ampy {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampy\") }
    }
    channel ampz {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampz\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Worley_f2.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0	autoscope=0 ]	(	0	0	)
group	[ 0	locks=0	autoscope=0 ]	(	`chs(\"../Perlin/group\")`	)
grouptype	[ 8	locks=0	autoscope=0 ]	(	[ grouptype	0 ] 	)
class	[ 8	locks=0	autoscope=0 ]	(	[ class	2 ] 	)
vex_numcount	[ 0	locks=0	autoscope=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0	autoscope=0 ]	(	1024	)
snippet	[ 0	locks=0	autoscope=0 ]	(	"vector4 pos = set(@P.x, @P.y, @P.z, 0);
vector4 freq = chp(\"freq\");
vector4 offset = chp(\"offset\");
vector amp = chv(\"amp\");
vector orig_amp = amp;

int oct = chi(\"octaves\");
float rough = chf(\"roughness\");

vector4 val = 0;
vector4 maxval = 0;
float f1, f2;
vector4 v1, v2;
int seed;
vector4 jitter = 1;

offset += p@time_offset;


if(chi(\"uniform\") == 1){
    freq = set(freq.x, freq.x, freq.x, freq.w);
}


for(int i = 0; i < oct; i++){   
    vector4 npos = pos * freq + offset;
    vnoise(npos, jitter, seed+i, f1, f2, v1, v2);
    vector nval = normalize(vector(v2)-vector(v1)) * (f2); 
    nval *= amp;
    val += nval;
    freq *= 2;
    maxval += amp;
    amp *= rough;
    
}

val /= maxval;

v@attr = vector(val) * orig_amp;"	)
exportlist	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_strict	[ 0	locks=0	autoscope=0 ]	(	"off"	)
autobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
bindings	[ 0	locks=0	autoscope=0 ]	(	1	)
groupautobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
groupbindings	[ 0	locks=0	autoscope=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0	autoscope=0 ]	(	.	)
vex_outputmask	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0	autoscope=0 ]	(	id	)
vex_inplace	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0	autoscope=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
amp	[ 8	locks=0 ]	(	[ ampx	1 ] 	[ ampy	1 ] 	[ ampz	1 ] 	)
roughness	[ 0	locks=0	autoscope=0 ]	(	[ roughness	0.5 ] 	)
octaves	[ 0	locks=0	autoscope=0 ]	(	[ octaves	1 ] 	)
freq	[ 0	locks=0	autoscope=0 ]	(	[ freqx	1 ] 	[ freqy	1 ] 	[ freqz	1 ] 	[ freqw	1 ] 	)
offset	[ 0	locks=0	autoscope=0 ]	(	[ offsetx	0 ] 	[ offsety	0 ] 	[ offsetz	0 ] 	[ offsetw	0 ] 	)
uniform	[ 0	locks=0	autoscope=0 ]	(	[ uniform	0 ] 	)
time_scale	[ 0	locks=0	autoscope=0 ]	(	[ time_scale	1 ] 	)
time_varying	[ 0	locks=0	autoscope=0 ]	(	[ time_varying	0 ] 	)
bindname1	[ 0	locks=0 ]	(	__attr	)
bindparm1	[ 0	locks=0 ]	(	attr	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Worley_f2.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/simplex_mosaic.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/simplex_mosaic.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 8.02872 0.227834
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	rest 0 1 "input1"
}
inputs
{
0 	rest 0 1
}
stat
{
  create 1524060463
  modify 1586108651
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/simplex_mosaic.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "amp"
        label   "Amp"
        type    vector
        size    3
        default { "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "roughness"
        label   "Roughness"
        type    float
        default { "0" }
        range   { 0.0001! 1 }
    }
    parm {
        name    "octaves"
        label   "Octaves"
        type    integer
        default { "0" }
        range   { 1! 10 }
    }
    parm {
        name    "freq"
        label   "Freq"
        type    vector4
        size    4
        default { "0" "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "offset"
        label   "Offset"
        type    vector4
        size    4
        default { "0" "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "tile_size"
        label   "Tile Size"
        type    vector
        size    3
        default { "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "uniform"
        label   "Uniform"
        type    toggle
        default { "0" }
    }
    parm {
        name    "time_scale"
        label   "Time Scale"
        type    float
        default { "0" }
        range   { 0 1 }
    }
    parm {
        name    "time_varying"
        label   "Time Varying"
        type    toggle
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "vex_precision"
        baseparm
        label   "VEX Precision"
        export  none
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/simplex_mosaic.chn"
Content-Type: text/plain

{
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Perlin/grouptype\") }
    }
    channel class {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../Perlin/class\") }
    }
    channel freqx {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqx\") }
    }
    channel freqy {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqy\") }
    }
    channel freqz {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqz\") }
    }
    channel freqw {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqw\") }
    }
    channel uniform {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../uniform\") }
    }
    channel roughness {
      lefttype = extend
      righttype = extend
      default = 0.5
      flags = 0
      segment { length = 0 value = 0.5 0.5 expr = ch(\"../roughness\") }
    }
    channel octaves {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../octaves\") }
    }
    channel offsetx {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetx\") }
    }
    channel offsety {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsety\") }
    }
    channel offsetz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetz\") }
    }
    channel offsetw {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetw\") }
    }
    channel time_varying {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../time_varying\") }
    }
    channel time_scale {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../time_scale\") }
    }
    channel tile_sizex {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../tile_sizex\") }
    }
    channel tile_sizey {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../tile_sizey\") }
    }
    channel tile_sizez {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../tile_sizez\") }
    }
    channel ampx {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampx\") }
    }
    channel ampy {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampy\") }
    }
    channel ampz {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampz\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/simplex_mosaic.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0	autoscope=0 ]	(	0	0	)
group	[ 0	locks=0	autoscope=0 ]	(	`chs(\"../Perlin/group\")`	)
grouptype	[ 8	locks=0	autoscope=0 ]	(	[ grouptype	0 ] 	)
class	[ 8	locks=0	autoscope=0 ]	(	[ class	2 ] 	)
vex_numcount	[ 0	locks=0	autoscope=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0	autoscope=0 ]	(	1024	)
snippet	[ 0	locks=0	autoscope=0 ]	(	"vector4 pos = set(@P.x, @P.y, @P.z, 0);
vector4 freq = chp(\"freq\");
vector4 offset = chp(\"offset\");
vector amp = chv(\"amp\");
vector orig_amp = amp;

vector tile = chv(\"tile_size\");

int oct = chi(\"octaves\");
float rough = chf(\"roughness\");

offset += p@time_offset;


if(chi(\"uniform\") == 1){
    freq = set(freq.x, freq.x, freq.x);
    tile = set(tile.x, tile.x, tile.x);
}

//round position for mosaic effect
pos *= tile;
pos = rint(pos);
pos /= tile;

vector val = 0;
vector maxval = 0;

for(int i = 0; i < oct; i++){   
    vector4 npos = pos * freq + offset;
    vector nval = xnoise(npos);
    nval = fit(nval, 0, 1, -1, 1);
    nval *= amp;
    val += nval;
    freq *= 2;
    maxval += amp;
    amp *= rough;
    
}

val /= maxval;

v@attr = val * orig_amp;"	)
exportlist	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_strict	[ 0	locks=0	autoscope=0 ]	(	"off"	)
autobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
bindings	[ 0	locks=0	autoscope=0 ]	(	1	)
groupautobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
groupbindings	[ 0	locks=0	autoscope=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0	autoscope=0 ]	(	.	)
vex_outputmask	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0	autoscope=0 ]	(	id	)
vex_inplace	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0	autoscope=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
amp	[ 8	locks=0 ]	(	[ ampx	1 ] 	[ ampy	1 ] 	[ ampz	1 ] 	)
roughness	[ 0	locks=0	autoscope=0 ]	(	[ roughness	0.5 ] 	)
octaves	[ 0	locks=0	autoscope=0 ]	(	[ octaves	1 ] 	)
freq	[ 0	locks=0	autoscope=0 ]	(	[ freqx	1 ] 	[ freqy	1 ] 	[ freqz	1 ] 	[ freqw	1 ] 	)
offset	[ 0	locks=0	autoscope=0 ]	(	[ offsetx	0 ] 	[ offsety	0 ] 	[ offsetz	0 ] 	[ offsetw	0 ] 	)
tile_size	[ 0	locks=0	autoscope=0 ]	(	[ tile_sizex	1 ] 	[ tile_sizey	1 ] 	[ tile_sizez	1 ] 	)
uniform	[ 0	locks=0	autoscope=0 ]	(	[ uniform	0 ] 	)
time_scale	[ 0	locks=0	autoscope=0 ]	(	[ time_scale	1 ] 	)
time_varying	[ 0	locks=0	autoscope=0 ]	(	[ time_varying	0 ] 	)
bindname1	[ 0	locks=0 ]	(	__attr	)
bindparm1	[ 0	locks=0 ]	(	attr	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/simplex_mosaic.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Simplex_Folded.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Simplex_Folded.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 11.5653 0.154994
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	rest 0 1 "input1"
}
inputs
{
0 	rest 0 1
}
stat
{
  create 1524060463
  modify 1586108648
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Simplex_Folded.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "amp"
        label   "Amp"
        type    vector
        size    3
        default { "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "roughness"
        label   "Roughness"
        type    float
        default { "0" }
        range   { 0.0001! 1 }
    }
    parm {
        name    "octaves"
        label   "Octaves"
        type    integer
        default { "0" }
        range   { 1! 10 }
    }
    parm {
        name    "freq"
        label   "Freq"
        type    vector4
        size    4
        default { "0" "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "offset"
        label   "Offset"
        type    vector4
        size    4
        default { "0" "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "uniform"
        label   "Uniform"
        type    integer
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "time_scale"
        label   "Time Scale"
        type    float
        default { "0" }
        range   { 0 1 }
    }
    parm {
        name    "time_varying"
        label   "Time Varying"
        type    toggle
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "vex_precision"
        baseparm
        label   "VEX Precision"
        export  none
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Simplex_Folded.chn"
Content-Type: text/plain

{
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Perlin/grouptype\") }
    }
    channel freqx {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqx\") }
    }
    channel freqy {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqy\") }
    }
    channel freqz {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqz\") }
    }
    channel freqw {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqw\") }
    }
    channel uniform {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../uniform\") }
    }
    channel roughness {
      lefttype = extend
      righttype = extend
      default = 0.5
      flags = 0
      segment { length = 0 value = 0.5 0.5 expr = ch(\"../roughness\") }
    }
    channel octaves {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../octaves\") }
    }
    channel offsetx {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetx\") }
    }
    channel offsety {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsety\") }
    }
    channel offsetz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetz\") }
    }
    channel offsetw {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetw\") }
    }
    channel time_varying {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../time_varying\") }
    }
    channel time_scale {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../time_scale\") }
    }
    channel ampx {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampx\") }
    }
    channel ampy {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampy\") }
    }
    channel ampz {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampz\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Simplex_Folded.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0	autoscope=0 ]	(	0	0	)
group	[ 0	locks=0	autoscope=0 ]	(	`chs(\"../Perlin/group\")`	)
grouptype	[ 8	locks=0	autoscope=0 ]	(	[ grouptype	0 ] 	)
class	[ 8	locks=0	autoscope=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0	autoscope=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0	autoscope=0 ]	(	1024	)
snippet	[ 0	locks=0	autoscope=0 ]	(	"vector4 pos = set(@P.x, @P.y, @P.z, 0);
vector4 freq = chp(\"freq\");
vector4 offset = chp(\"offset\");
vector amp = chv(\"amp\");
vector orig_amp = amp;

int oct = chi(\"octaves\");
float rough = chf(\"roughness\");

vector val = 0;
vector maxval = 0;

offset += p@time_offset;


if(chi(\"uniform\") == 1){
    freq = set(freq.x, freq.x, freq.x, freq.w);
}

for(int i = 0; i < oct; i++){
    vector4 npos = pos * freq + offset;
    vector nval = xnoise(npos);
    nval = fit(nval, 0, 1, -1, 1);
    nval *= amp;
    val += nval;
    freq *= 2;
    maxval += amp;
    amp *= rough;
    
    
}

val /= maxval;

//val -= .5;
val = abs(val);

v@attr = val * orig_amp;"	)
exportlist	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_strict	[ 0	locks=0	autoscope=0 ]	(	"off"	)
autobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
bindings	[ 0	locks=0	autoscope=0 ]	(	1	)
groupautobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
groupbindings	[ 0	locks=0	autoscope=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0	autoscope=0 ]	(	.	)
vex_outputmask	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0	autoscope=0 ]	(	id	)
vex_inplace	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0	autoscope=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
amp	[ 0	locks=0 ]	(	[ ampx	1 ] 	[ ampy	1 ] 	[ ampz	1 ] 	)
roughness	[ 0	locks=0	autoscope=0 ]	(	[ roughness	0.5 ] 	)
octaves	[ 0	locks=0	autoscope=0 ]	(	[ octaves	1 ] 	)
freq	[ 0	locks=0	autoscope=0 ]	(	[ freqx	1 ] 	[ freqy	1 ] 	[ freqz	1 ] 	[ freqw	1 ] 	)
offset	[ 0	locks=0	autoscope=0 ]	(	[ offsetx	0 ] 	[ offsety	0 ] 	[ offsetz	0 ] 	[ offsetw	0 ] 	)
uniform	[ 0	locks=0	autoscope=0 ]	(	[ uniform	0 ] 	)
time_scale	[ 0	locks=0	autoscope=0 ]	(	[ time_scale	1 ] 	)
time_varying	[ 0	locks=0	autoscope=0 ]	(	[ time_varying	0 ] 	)
bindname1	[ 0	locks=0 ]	(	__attr	)
bindparm1	[ 0	locks=0 ]	(	attr	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Simplex_Folded.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/simplex_warped.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/simplex_warped.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 15.7853 0.154994
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	rest 0 1 "input1"
}
inputs
{
0 	rest 0 1
}
stat
{
  create 1524060463
  modify 1586108643
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/simplex_warped.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "amp"
        label   "Amp"
        type    vector
        size    3
        default { "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "roughness"
        label   "Roughness"
        type    float
        default { "0" }
        range   { 0.0001! 1 }
    }
    parm {
        name    "octaves"
        label   "Octaves"
        type    integer
        default { "0" }
        range   { 1! 10 }
    }
    parm {
        name    "freq"
        label   "Freq"
        type    vector4
        size    4
        default { "0" "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "offset"
        label   "Offset"
        type    vector4
        size    4
        default { "0" "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "uniform"
        label   "Uniform"
        type    integer
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "Distort"
        label   "Distort"
        type    vector
        size    3
        default { "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "time_scale"
        label   "Time Scale"
        type    float
        default { "0" }
        range   { 0 1 }
    }
    parm {
        name    "time_varying"
        label   "Time Varying"
        type    toggle
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "vex_precision"
        baseparm
        label   "VEX Precision"
        export  none
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/simplex_warped.chn"
Content-Type: text/plain

{
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Perlin/grouptype\") }
    }
    channel freqx {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqx\") }
    }
    channel freqy {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqy\") }
    }
    channel freqz {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqz\") }
    }
    channel freqw {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqw\") }
    }
    channel uniform {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../uniform\") }
    }
    channel roughness {
      lefttype = extend
      righttype = extend
      default = 0.5
      flags = 0
      segment { length = 0 value = 0.5 0.5 expr = ch(\"../roughness\") }
    }
    channel octaves {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../octaves\") }
    }
    channel offsetx {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetx\") }
    }
    channel offsety {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsety\") }
    }
    channel offsetz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetz\") }
    }
    channel offsetw {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetw\") }
    }
    channel time_varying {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../time_varying\") }
    }
    channel time_scale {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../time_scale\") }
    }
    channel Distortx {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Distortx\") }
    }
    channel Distorty {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Distorty\") }
    }
    channel Distortz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Distortz\") }
    }
    channel ampx {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../ampx\") }
    }
    channel ampy {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../ampy\") }
    }
    channel ampz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../ampz\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/simplex_warped.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0	autoscope=0 ]	(	0	0	)
group	[ 0	locks=0	autoscope=0 ]	(	`chs(\"../Perlin/group\")`	)
grouptype	[ 8	locks=0	autoscope=0 ]	(	[ grouptype	0 ] 	)
class	[ 0	locks=0	autoscope=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0	autoscope=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0	autoscope=0 ]	(	1024	)
snippet	[ 0	locks=0	autoscope=0 ]	(	"vector4 pos = set(@P.x, @P.y, @P.z, 0);
vector4 freq = chp(\"freq\");
vector4 offset = chp(\"offset\");
vector distort = chv(\"Distort\");
vector amp = chv(\"amp\");
vector orig_amp = amp;

int oct = chi(\"octaves\");
float rough = chf(\"roughness\");

vector val = 0;
vector maxval = 0;

offset += p@time_offset;


if(chi(\"uniform\") == 1){
    freq = set(freq.x, freq.x, freq.x, freq.w);
    distort = set(distort.x, distort.x, distort.x);
}

for(int i = 0; i < oct; i++){
   
    vector4 npos = pos * freq + offset;
    npos += fit01(xnoise(npos),{-1,-1,-1},{1,1,1}) * distort;
    vector nval = xnoise(npos);
    nval = fit(nval, 0, 1, -1, 1);
    nval *= amp;
    val += nval;
        freq *= 2;
    maxval += amp;
    amp *= rough;
    distort *= 4;
}

val /= maxval;

v@attr = val * orig_amp;"	)
exportlist	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_strict	[ 0	locks=0	autoscope=0 ]	(	"off"	)
autobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
bindings	[ 0	locks=0	autoscope=0 ]	(	1	)
groupautobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
groupbindings	[ 0	locks=0	autoscope=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0	autoscope=0 ]	(	.	)
vex_outputmask	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0	autoscope=0 ]	(	id	)
vex_inplace	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0	autoscope=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0	autoscope=0 ]	(	0	0	)
amp	[ 0	locks=0 ]	(	[ ampx	1 ] 	[ ampy	1 ] 	[ ampz	1 ] 	)
roughness	[ 0	locks=0	autoscope=0 ]	(	[ roughness	0.5 ] 	)
octaves	[ 0	locks=0	autoscope=0 ]	(	[ octaves	1 ] 	)
freq	[ 0	locks=0	autoscope=0 ]	(	[ freqx	1 ] 	[ freqy	1 ] 	[ freqz	1 ] 	[ freqw	1 ] 	)
offset	[ 0	locks=0	autoscope=0 ]	(	[ offsetx	0 ] 	[ offsety	0 ] 	[ offsetz	0 ] 	[ offsetw	0 ] 	)
uniform	[ 0	locks=0	autoscope=0 ]	(	[ uniform	0 ] 	)
Distort	[ 0	locks=0	autoscope=0 ]	(	[ Distortx	0 ] 	[ Distorty	0 ] 	[ Distortz	0 ] 	)
time_scale	[ 0	locks=0	autoscope=0 ]	(	[ time_scale	1 ] 	)
time_varying	[ 0	locks=0	autoscope=0 ]	(	[ time_varying	0 ] 	)
bindname1	[ 0	locks=0 ]	(	__attr	)
bindparm1	[ 0	locks=0 ]	(	attr	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/simplex_warped.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/mix_min.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/mix_min.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 19.7576 0.154994
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	rest 0 1 "input1"
}
inputs
{
0 	rest 0 1
}
stat
{
  create 1524060463
  modify 1586108639
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/mix_min.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "amp"
        label   "Amp"
        type    vector
        size    3
        default { "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "roughness"
        label   "Roughness"
        type    float
        default { "0" }
        range   { 0.0001! 1 }
    }
    parm {
        name    "octaves"
        label   "Octaves"
        type    integer
        default { "0" }
        range   { 1! 10 }
    }
    parm {
        name    "freq"
        label   "Freq"
        type    vector4
        size    4
        default { "0" "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "offset"
        label   "Offset"
        type    vector4
        size    4
        default { "0" "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "uniform"
        label   "Uniform"
        type    integer
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "time_scale"
        label   "Time Scale"
        type    float
        default { "0" }
        range   { 0 1 }
    }
    parm {
        name    "time_varying"
        label   "Time Varying"
        type    toggle
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "vex_precision"
        baseparm
        label   "VEX Precision"
        export  none
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/mix_min.chn"
Content-Type: text/plain

{
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Perlin/grouptype\") }
    }
    channel freqx {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqx\") }
    }
    channel freqy {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqy\") }
    }
    channel freqz {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqz\") }
    }
    channel freqw {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqw\") }
    }
    channel uniform {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../uniform\") }
    }
    channel roughness {
      lefttype = extend
      righttype = extend
      default = 0.5
      flags = 0
      segment { length = 0 value = 0.5 0.5 expr = ch(\"../roughness\") }
    }
    channel octaves {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../octaves\") }
    }
    channel offsetx {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetx\") }
    }
    channel offsety {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsety\") }
    }
    channel offsetz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetz\") }
    }
    channel offsetw {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetw\") }
    }
    channel time_varying {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../time_varying\") }
    }
    channel time_scale {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../time_scale\") }
    }
    channel ampx {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampx\") }
    }
    channel ampy {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampy\") }
    }
    channel ampz {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampz\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/mix_min.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0	autoscope=0 ]	(	0	0	)
group	[ 0	locks=0	autoscope=0 ]	(	`chs(\"../Perlin/group\")`	)
grouptype	[ 8	locks=0	autoscope=0 ]	(	[ grouptype	0 ] 	)
class	[ 0	locks=0	autoscope=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0	autoscope=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0	autoscope=0 ]	(	1024	)
snippet	[ 0	locks=0	autoscope=0 ]	(	"vector4 pos = set(@P.x, @P.y, @P.z, 0);
vector4 freq = chp(\"freq\");
vector4 offset = chp(\"offset\");
vector amp = chv(\"amp\");
vector orig_amp = amp;

int oct = chi(\"octaves\");
float rough = chf(\"roughness\");

vector val = 0;
vector maxval = 0;

offset += p@time_offset;


if(chi(\"uniform\") == 1){
    freq = set(freq.x, freq.x, freq.x, freq.w);
}

for(int i = 0; i < oct; i++){
    vector4 npos = pos * freq + offset;
    vector nval1 = abs(fit01(vector(xnoise(npos)), -2, 2));
    vector nval2 = abs(fit01(vector(xnoise(npos + {1223,4456,789})), -2, 2));
    vector nval3 = abs(fit01(vector(xnoise(npos + {9877,321,654})), -2, 2));
    nval1 = clamp(nval1, 0., 1.);
    nval2 = clamp(nval2, 0., 1.);
    nval3 = clamp(nval3, 0., 1.);
    
    vector nval = min(nval1, nval2, nval3);
    nval *= amp;
    val += nval;
    freq *= 2;
    maxval += amp;
    amp *= rough;
}

val /= maxval;

v@attr = val * orig_amp;"	)
exportlist	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_strict	[ 0	locks=0	autoscope=0 ]	(	"off"	)
autobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
bindings	[ 0	locks=0	autoscope=0 ]	(	1	)
groupautobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
groupbindings	[ 0	locks=0	autoscope=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0	autoscope=0 ]	(	.	)
vex_outputmask	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0	autoscope=0 ]	(	id	)
vex_inplace	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0	autoscope=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
amp	[ 0	locks=0 ]	(	[ ampx	1 ] 	[ ampy	1 ] 	[ ampz	1 ] 	)
roughness	[ 0	locks=0	autoscope=0 ]	(	[ roughness	0.5 ] 	)
octaves	[ 0	locks=0	autoscope=0 ]	(	[ octaves	1 ] 	)
freq	[ 0	locks=0	autoscope=0 ]	(	[ freqx	1 ] 	[ freqy	1 ] 	[ freqz	1 ] 	[ freqw	1 ] 	)
offset	[ 0	locks=0	autoscope=0 ]	(	[ offsetx	0 ] 	[ offsety	0 ] 	[ offsetz	0 ] 	[ offsetw	0 ] 	)
uniform	[ 0	locks=0	autoscope=0 ]	(	[ uniform	0 ] 	)
time_scale	[ 0	locks=0	autoscope=0 ]	(	[ time_scale	1 ] 	)
time_varying	[ 0	locks=0	autoscope=0 ]	(	[ time_varying	0 ] 	)
bindname1	[ 0	locks=0 ]	(	__attr	)
bindparm1	[ 0	locks=0 ]	(	attr	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/mix_min.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rest.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rest.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.00258204 4.2038
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display on render on highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	switch_do_time_varying 1 1 "input1"
}
inputs
{
0 	switch_do_time_varying 0 1
}
stat
{
  create 1524060464
  modify 1586108457
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rest.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "use_rest"
        label   "Use Rest"
        type    integer
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "has_rest"
        label   "Has Rest"
        type    integer
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "vex_precision"
        baseparm
        label   "VEX Precision"
        export  none
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rest.chn"
Content-Type: text/plain

{
    channel has_rest {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = "haspointattrib(\"../IN_MOPS\", \"rest\")" }
    }
    channel use_rest {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../use_rest\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rest.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0	autoscope=0 ]	(	0	0	)
group	[ 0	locks=0	autoscope=0 ]	(	""	)
grouptype	[ 0	locks=0	autoscope=0 ]	(	"guess"	)
class	[ 0	locks=0	autoscope=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0	autoscope=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0	autoscope=0 ]	(	1024	)
snippet	[ 0	locks=0	autoscope=0 ]	(	"v@__P = @P;
if(chi(\"use_rest\") && chi(\"has_rest\")) {
    @P = point(0, \"rest\", @ptnum);
}"	)
exportlist	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_strict	[ 0	locks=0	autoscope=0 ]	(	"off"	)
autobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
bindings	[ 0	locks=0	autoscope=0 ]	(	0	)
groupautobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
groupbindings	[ 0	locks=0	autoscope=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0	autoscope=0 ]	(	.	)
vex_outputmask	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0	autoscope=0 ]	(	id	)
vex_inplace	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0	autoscope=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0	autoscope=0 ]	(	0	0	)
use_rest	[ 0	locks=0	autoscope=0 ]	(	[ use_rest	0 ] 	)
has_rest	[ 8	locks=0	autoscope=0 ]	(	[ has_rest	1 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rest.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/back_to_P.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/back_to_P.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 2.82817 -3.51601
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch1 9 1 "input1"
}
inputs
{
0 	switch1 0 1
}
stat
{
  create 1549075027
  modify 1586107415
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/back_to_P.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"v@P = v@__P;"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/back_to_P.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/range_3D.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/range_3D.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 5.19447 -5.8012
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	attribdelete1 1 1 "input1"
}
inputs
{
0 	attribdelete1 0 1
}
stat
{
  create 1549515796
  modify 1586107415
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/range_3D.multiparm"
Content-Type: text/plain

3
remap_ramp#pos ../remap_ramp#pos
remap_ramp#value ../remap_ramp#value
remap_ramp#interp ../remap_ramp#interp

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/range_3D.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "input_range"
        label   "Input Range"
        type    vector2
        size    2
        default { "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "output_range"
        label   "Output Range"
        type    vector2
        size    2
        default { "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "vex_precision"
        baseparm
        label   "VEX Precision"
        export  none
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/range_3D.chn"
Content-Type: text/plain

{
    channel input_rangex {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../input_rangevx\") }
    }
    channel input_rangey {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../input_rangevy\") }
    }
    channel output_rangex {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../output_rangevx\") }
    }
    channel output_rangey {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../output_rangevy\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/range_3D.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"vector input = chu(\"input_range\");
vector output = chu(\"output_range\");
vector remap = fit(v@attr, input.x, input.y, output.x, output.y);
v@attr = remap;"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	1	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
input_range	[ 8	locks=0 ]	(	[ input_rangex	-1 ] 	[ input_rangey	1 ] 	)
output_range	[ 8	locks=0 ]	(	[ output_rangex	-1 ] 	[ output_rangey	1 ] 	)
bindname1	[ 0	locks=0 ]	(	__attr	)
bindparm1	[ 0	locks=0 ]	(	attr	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/range_3D.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/range_2D.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/range_2D.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.0682543 -5.57551
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	attribdelete1 1 1 "input1"
}
inputs
{
0 	attribdelete1 0 1
}
stat
{
  create 1550294119
  modify 1586107415
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/range_2D.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "input_range"
        label   "Input Range"
        type    vector2
        size    2
        default { "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "output_range"
        label   "Output Range"
        type    vector2
        size    2
        default { "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "vex_precision"
        baseparm
        label   "VEX Precision"
        export  none
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/range_2D.chn"
Content-Type: text/plain

{
    channel input_rangex {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../input_rangevx\") }
    }
    channel input_rangey {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../input_rangevy\") }
    }
    channel output_rangex {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../output_rangevx\") }
    }
    channel output_rangey {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../output_rangevy\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/range_2D.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"float value = length(v@attr);
vector2 input = chu(\"input_range\");
vector2 output = chu(\"output_range\");
float remap = fit(value, input.x, input.y, output.x, output.y);
f@float_attr = remap;"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	1	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
input_range	[ 8	locks=0 ]	(	[ input_rangex	-1 ] 	[ input_rangey	1 ] 	)
output_range	[ 8	locks=0 ]	(	[ output_rangex	-1 ] 	[ output_rangey	1 ] 	)
bindname1	[ 0	locks=0 ]	(	__attr	)
bindparm1	[ 0	locks=0 ]	(	attr	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/range_2D.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Curl.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Curl.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 23.2434 0.18693
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	rest 0 1 "input1"
}
inputs
{
0 	rest 0 1
}
stat
{
  create 1524060463
  modify 1586108612
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Curl.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "amp"
        label   "Amp"
        type    vector
        size    3
        default { "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "roughness"
        label   "Roughness"
        type    float
        default { "0" }
        range   { 0.0001! 1 }
    }
    parm {
        name    "octaves"
        label   "Octaves"
        type    integer
        default { "0" }
        range   { 1! 10 }
    }
    parm {
        name    "freq"
        label   "Freq"
        type    vector4
        size    4
        default { "0" "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "offset"
        label   "Offset"
        type    vector4
        size    4
        default { "0" "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "uniform"
        label   "Uniform"
        type    toggle
        default { "0" }
    }
    parm {
        name    "time_scale"
        label   "Time Scale"
        type    float
        default { "0" }
        range   { 0 1 }
    }
    parm {
        name    "time_varying"
        label   "Time Varying"
        type    toggle
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "vex_precision"
        baseparm
        label   "VEX Precision"
        export  none
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Curl.chn"
Content-Type: text/plain

{
    channel group {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../group\") }
    }
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../grouptype\") }
    }
    channel freqx {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqx\") }
    }
    channel freqy {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqy\") }
    }
    channel freqz {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqz\") }
    }
    channel freqw {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqw\") }
    }
    channel uniform {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../uniform\") }
    }
    channel roughness {
      lefttype = extend
      righttype = extend
      default = 0.5
      flags = 0
      segment { length = 0 value = 0.5 0.5 expr = ch(\"../roughness\") }
    }
    channel octaves {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../octaves\") }
    }
    channel offsetx {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetx\") }
    }
    channel offsety {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsety\") }
    }
    channel offsetz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetz\") }
    }
    channel offsetw {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetw\") }
    }
    channel time_varying {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../time_varying\") }
    }
    channel time_scale {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../time_scale\") }
    }
    channel ampx {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampx\") }
    }
    channel ampy {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampy\") }
    }
    channel ampz {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampz\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Curl.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0	autoscope=0 ]	(	0	0	)
group	[ 0	locks=0	autoscope=0 ]	(	[ group	__mops_orig ] 	)
grouptype	[ 0	locks=0	autoscope=0 ]	(	[ grouptype	0 ] 	)
class	[ 0	locks=0	autoscope=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0	autoscope=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0	autoscope=0 ]	(	1024	)
snippet	[ 0	locks=0	autoscope=0 ]	(	"vector4 pos = set(@P.x, @P.y, @P.z, 0);
vector4 freq = chp(\"freq\");
vector4 offset = chp(\"offset\");
vector amp = chv(\"amp\");
vector orig_amp = amp;

int oct = chi(\"octaves\");
float rough = chf(\"roughness\");

vector val = 0;
vector maxval = 0;

offset += p@time_offset;

if(chi(\"uniform\") == 1){
    freq = set(freq.x, freq.x, freq.x, freq.w);
}

for(int i = 0; i < oct; i++){
    vector4 npos = pos * freq + offset;
    vector nval = curlxnoise(npos);
    nval = fit(nval, -1, 1, -1, 1);
    nval *= amp;
    val += nval;
    freq *= 2;
    maxval += amp;
    amp *= rough;
}

val /= maxval;

v@attr = val * orig_amp;"	)
exportlist	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_strict	[ 0	locks=0	autoscope=0 ]	(	"off"	)
autobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
bindings	[ 0	locks=0	autoscope=0 ]	(	1	)
groupautobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
groupbindings	[ 0	locks=0	autoscope=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0	autoscope=0 ]	(	.	)
vex_outputmask	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0	autoscope=0 ]	(	id	)
vex_inplace	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0	autoscope=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
amp	[ 0	locks=0	autoscope=0 ]	(	[ ampx	1 ] 	[ ampy	1 ] 	[ ampz	1 ] 	)
roughness	[ 0	locks=0	autoscope=0 ]	(	[ roughness	0.5 ] 	)
octaves	[ 0	locks=0	autoscope=0 ]	(	[ octaves	1 ] 	)
freq	[ 0	locks=0	autoscope=0 ]	(	[ freqx	1 ] 	[ freqy	1 ] 	[ freqz	1 ] 	[ freqw	1 ] 	)
offset	[ 0	locks=0	autoscope=0 ]	(	[ offsetx	0 ] 	[ offsety	0 ] 	[ offsetz	0 ] 	[ offsetw	0 ] 	)
uniform	[ 0	locks=0	autoscope=0 ]	(	[ uniform	0 ] 	)
time_scale	[ 0	locks=0	autoscope=0 ]	(	[ time_scale	1 ] 	)
time_varying	[ 0	locks=0	autoscope=0 ]	(	[ time_varying	0 ] 	)
bindname1	[ 0	locks=0 ]	(	__attr	)
bindparm1	[ 0	locks=0 ]	(	attr	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Curl.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pointwrangle1.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pointwrangle1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 0.003 6.4012
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	IN_MOPS 1 1 "input1"
}
inputs
{
0 	IN_MOPS 0 1
}
stat
{
  create 1554935939
  modify 1586107415
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pointwrangle1.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"p@time_offset = set(0,0,0,0);"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pointwrangle1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pointwrangle2.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pointwrangle2.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 3.19759 5.74642
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	pointwrangle1 1 1 "input1"
}
inputs
{
0 	pointwrangle1 0 1
}
stat
{
  create 1554935960
  modify 1586107415
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pointwrangle2.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "timescale"
        label   "Timescale"
        type    float
        default { "0" }
        range   { 0 1 }
    }
    parm {
        name    "vex_precision"
        baseparm
        label   "VEX Precision"
        export  none
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pointwrangle2.chn"
Content-Type: text/plain

{
    channel timescale {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../time_scale\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pointwrangle2.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"p@time_offset = set(0,0,0,@Time * ch(\"timescale\"));"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
timescale	[ 0	locks=0 ]	(	[ timescale	1 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pointwrangle2.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Alligator.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Alligator.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 26.322 0.18693
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	rest 0 1 "input1"
}
inputs
{
0 	rest 0 1
}
stat
{
  create 1524060463
  modify 1586108625
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Alligator.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "amp"
        label   "Amp"
        type    vector
        size    3
        default { "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "roughness"
        label   "Roughness"
        type    float
        default { "0" }
        range   { 0.0001! 1 }
    }
    parm {
        name    "octaves"
        label   "Octaves"
        type    integer
        default { "0" }
        range   { 1! 10 }
    }
    parm {
        name    "freq"
        label   "Freq"
        type    vector4
        size    4
        default { "0" "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "offset"
        label   "Offset"
        type    vector4
        size    4
        default { "0" "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "uniform"
        label   "Uniform"
        type    toggle
        default { "0" }
    }
    parm {
        name    "time_scale"
        label   "Time Scale"
        type    float
        default { "0" }
        range   { 0 1 }
    }
    parm {
        name    "time_varying"
        label   "Time Varying"
        type    toggle
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "vex_precision"
        baseparm
        label   "VEX Precision"
        export  none
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Alligator.chn"
Content-Type: text/plain

{
    channel group {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../group\") }
    }
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../grouptype\") }
    }
    channel freqx {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqx\") }
    }
    channel freqy {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqy\") }
    }
    channel freqz {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqz\") }
    }
    channel freqw {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqw\") }
    }
    channel uniform {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../uniform\") }
    }
    channel roughness {
      lefttype = extend
      righttype = extend
      default = 0.5
      flags = 0
      segment { length = 0 value = 0.5 0.5 expr = ch(\"../roughness\") }
    }
    channel octaves {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../octaves\") }
    }
    channel offsetx {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetx\") }
    }
    channel offsety {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsety\") }
    }
    channel offsetz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetz\") }
    }
    channel offsetw {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetw\") }
    }
    channel time_varying {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../time_varying\") }
    }
    channel time_scale {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../time_scale\") }
    }
    channel ampx {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampx\") }
    }
    channel ampy {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampy\") }
    }
    channel ampz {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampz\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Alligator.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0	autoscope=0 ]	(	0	0	)
group	[ 0	locks=0	autoscope=0 ]	(	[ group	__mops_orig ] 	)
grouptype	[ 0	locks=0	autoscope=0 ]	(	[ grouptype	0 ] 	)
class	[ 0	locks=0	autoscope=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0	autoscope=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0	autoscope=0 ]	(	1024	)
snippet	[ 0	locks=0	autoscope=0 ]	(	"vector4 pos = set(@P.x, @P.y, @P.z, 0);
vector4 freq = chp(\"freq\");
vector4 offset = chp(\"offset\");
vector amp = chv(\"amp\");
vector orig_amp = amp;

int oct = chi(\"octaves\");
float rough = chf(\"roughness\");

vector val = 0;
vector maxval = 0;

offset += p@time_offset;

if(chi(\"uniform\") == 1){
    freq = set(freq.x, freq.x, freq.x);
}

for(int i = 0; i < oct; i++){
    vector4 npos = pos * freq + offset;
    vector nval = anoise(npos);
    nval = fit(nval, -1, 1, -1, 1);
    nval *= amp;
    val += nval;
    freq *= 2;
    maxval += amp;
    amp *= rough;
}

val /= maxval;

v@attr = val * orig_amp;"	)
exportlist	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_strict	[ 0	locks=0	autoscope=0 ]	(	"off"	)
autobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
bindings	[ 0	locks=0	autoscope=0 ]	(	1	)
groupautobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
groupbindings	[ 0	locks=0	autoscope=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0	autoscope=0 ]	(	.	)
vex_outputmask	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0	autoscope=0 ]	(	id	)
vex_inplace	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0	autoscope=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
amp	[ 8	locks=0	autoscope=0 ]	(	[ ampx	1 ] 	[ ampy	1 ] 	[ ampz	1 ] 	)
roughness	[ 8	locks=0	autoscope=0 ]	(	[ roughness	0.5 ] 	)
octaves	[ 8	locks=0	autoscope=0 ]	(	[ octaves	1 ] 	)
freq	[ 8	locks=0	autoscope=0 ]	(	[ freqx	1 ] 	[ freqy	1 ] 	[ freqz	1 ] 	[ freqw	1 ] 	)
offset	[ 8	locks=0	autoscope=0 ]	(	[ offsetx	0 ] 	[ offsety	0 ] 	[ offsetz	0 ] 	[ offsetw	0 ] 	)
uniform	[ 0	locks=0	autoscope=0 ]	(	[ uniform	0 ] 	)
time_scale	[ 0	locks=0	autoscope=0 ]	(	[ time_scale	1 ] 	)
time_varying	[ 0	locks=0	autoscope=0 ]	(	[ time_varying	0 ] 	)
bindname1	[ 0	locks=0 ]	(	__attr	)
bindparm1	[ 0	locks=0 ]	(	attr	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Alligator.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Sparse_Convolution.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Sparse_Convolution.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 28.9221 0.0946457
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	rest 0 1 "input1"
}
inputs
{
0 	rest 0 1
}
stat
{
  create 1524060463
  modify 1586108634
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Sparse_Convolution.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "amp"
        label   "Amp"
        type    vector
        size    3
        default { "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "roughness"
        label   "Roughness"
        type    float
        default { "0" }
        range   { 0.0001! 1 }
    }
    parm {
        name    "octaves"
        label   "Octaves"
        type    integer
        default { "0" }
        range   { 1! 10 }
    }
    parm {
        name    "freq"
        label   "Freq"
        type    vector4
        size    4
        default { "0" "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "offset"
        label   "Offset"
        type    vector4
        size    4
        default { "0" "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "uniform"
        label   "Uniform"
        type    toggle
        default { "0" }
    }
    parm {
        name    "time_scale"
        label   "Time Scale"
        type    float
        default { "0" }
        range   { 0 1 }
    }
    parm {
        name    "time_varying"
        label   "Time Varying"
        type    toggle
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "vex_precision"
        baseparm
        label   "VEX Precision"
        export  none
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Sparse_Convolution.chn"
Content-Type: text/plain

{
    channel group {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../group\") }
    }
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../grouptype\") }
    }
    channel freqx {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqx\") }
    }
    channel freqy {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqy\") }
    }
    channel freqz {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqz\") }
    }
    channel freqw {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../freqw\") }
    }
    channel uniform {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../uniform\") }
    }
    channel roughness {
      lefttype = extend
      righttype = extend
      default = 0.5
      flags = 0
      segment { length = 0 value = 0.5 0.5 expr = ch(\"../roughness\") }
    }
    channel octaves {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../octaves\") }
    }
    channel offsetx {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetx\") }
    }
    channel offsety {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsety\") }
    }
    channel offsetz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetz\") }
    }
    channel offsetw {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../offsetw\") }
    }
    channel time_varying {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../time_varying\") }
    }
    channel time_scale {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../time_scale\") }
    }
    channel ampx {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampx\") }
    }
    channel ampy {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampy\") }
    }
    channel ampz {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ampz\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Sparse_Convolution.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0	autoscope=0 ]	(	0	0	)
group	[ 0	locks=0	autoscope=0 ]	(	[ group	__mops_orig ] 	)
grouptype	[ 0	locks=0	autoscope=0 ]	(	[ grouptype	0 ] 	)
class	[ 0	locks=0	autoscope=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0	autoscope=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0	autoscope=0 ]	(	1024	)
snippet	[ 0	locks=0	autoscope=0 ]	(	"vector4 pos = set(@P.x, @P.y, @P.z, 0);
vector4 freq = chp(\"freq\");
vector4 offset = chp(\"offset\");
vector amp = chv(\"amp\");
vector orig_amp = amp;

int oct = chi(\"octaves\");
float rough = chf(\"roughness\");

vector val = 0;
vector maxval = 0;

offset += p@time_offset;

if(chi(\"uniform\") == 1){
    freq = set(freq.x, freq.x, freq.x);
}

for(int i = 0; i < oct; i++){
    vector4 npos = pos * freq + offset;
    vector nval = snoise(npos);
    nval = fit(nval, -1, 1, -1, 1);
    nval *= amp;
    val += nval;
    freq *= 2;
    maxval += amp;
    amp *= rough;
    
}

val /= maxval;

v@attr = val * orig_amp;"	)
exportlist	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_strict	[ 0	locks=0	autoscope=0 ]	(	"off"	)
autobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
bindings	[ 0	locks=0	autoscope=0 ]	(	1	)
groupautobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
groupbindings	[ 0	locks=0	autoscope=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0	autoscope=0 ]	(	.	)
vex_outputmask	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0	autoscope=0 ]	(	id	)
vex_inplace	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0	autoscope=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
amp	[ 8	locks=0	autoscope=0 ]	(	[ ampx	1 ] 	[ ampy	1 ] 	[ ampz	1 ] 	)
roughness	[ 8	locks=0	autoscope=0 ]	(	[ roughness	0.5 ] 	)
octaves	[ 8	locks=0	autoscope=0 ]	(	[ octaves	1 ] 	)
freq	[ 8	locks=0	autoscope=0 ]	(	[ freqx	1 ] 	[ freqy	1 ] 	[ freqz	1 ] 	[ freqw	1 ] 	)
offset	[ 8	locks=0	autoscope=0 ]	(	[ offsetx	0 ] 	[ offsety	0 ] 	[ offsetz	0 ] 	[ offsetw	0 ] 	)
uniform	[ 0	locks=0	autoscope=0 ]	(	[ uniform	0 ] 	)
time_scale	[ 0	locks=0	autoscope=0 ]	(	[ time_scale	1 ] 	)
time_varying	[ 0	locks=0	autoscope=0 ]	(	[ time_varying	0 ] 	)
bindname1	[ 0	locks=0 ]	(	__attr	)
bindparm1	[ 0	locks=0 ]	(	attr	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Sparse_Convolution.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pointwrangle3.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pointwrangle3.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 1.83142 -5.57451
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	attribdelete1 1 1 "input1"
}
inputs
{
0 	attribdelete1 0 1
}
stat
{
  create 1583773867
  modify 1586107415
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pointwrangle3.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"f@float_attr = length(v@attr);"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	1	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
bindname1	[ 0	locks=0 ]	(	__attr	)
bindparm1	[ 0	locks=0 ]	(	attr	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pointwrangle3.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/range_3D1.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/range_3D1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 8.35516 -5.66842
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	attribdelete1 1 1 "input1"
}
inputs
{
0 	attribdelete1 0 1
}
stat
{
  create 1549515796
  modify 1586107415
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/range_3D1.multiparm"
Content-Type: text/plain

3
remap_ramp#pos ../remap_ramp#pos
remap_ramp#value ../remap_ramp#value
remap_ramp#interp ../remap_ramp#interp

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/range_3D1.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "vex_precision"
        baseparm
        label   "VEX Precision"
        export  none
    }
    parm {
        name    "input_min"
        label   "Input Min"
        type    vector
        size    3
        default { "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "input_max"
        label   "Input Max"
        type    vector
        size    3
        default { "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "output_min"
        label   "Output Min"
        type    vector
        size    3
        default { "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "output_max"
        label   "Output Max"
        type    vector
        size    3
        default { "0" "0" "0" }
        range   { 0 1 }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/range_3D1.chn"
Content-Type: text/plain

{
    channel input_minx {
      lefttype = extend
      righttype = extend
      default = -1
      flags = 0
      segment { length = 0 value = -1 -1 expr = ch(\"../input_min_3Dx\") }
    }
    channel input_miny {
      lefttype = extend
      righttype = extend
      default = -1
      flags = 0
      segment { length = 0 value = -1 -1 expr = ch(\"../input_min_3Dy\") }
    }
    channel input_minz {
      lefttype = extend
      righttype = extend
      default = -1
      flags = 0
      segment { length = 0 value = -1 -1 expr = ch(\"../input_min_3Dz\") }
    }
    channel input_maxx {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../input_max_3Dx\") }
    }
    channel input_maxy {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../input_max_3Dy\") }
    }
    channel input_maxz {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../input_max_3Dz\") }
    }
    channel output_minx {
      lefttype = extend
      righttype = extend
      default = -1
      flags = 0
      segment { length = 0 value = -1 -1 expr = ch(\"../output_min_3Dx\") }
    }
    channel output_miny {
      lefttype = extend
      righttype = extend
      default = -1
      flags = 0
      segment { length = 0 value = -1 -1 expr = ch(\"../output_min_3Dy\") }
    }
    channel output_minz {
      lefttype = extend
      righttype = extend
      default = -1
      flags = 0
      segment { length = 0 value = -1 -1 expr = ch(\"../output_min_3Dz\") }
    }
    channel output_maxx {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../output_max_3Dx\") }
    }
    channel output_maxy {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../output_max_3Dy\") }
    }
    channel output_maxz {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../output_max_3Dz\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/range_3D1.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"vector input_min = chv(\"input_min\");
vector input_max = chv(\"input_max\");
vector output_min = chv(\"output_min\");
vector output_max = chv(\"output_max\");

vector remap = fit(v@attr, input_min, input_max, output_min, output_max);

v@attr = remap;"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	1	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
input_min	[ 8	locks=0 ]	(	[ input_minx	-1 ] 	[ input_miny	-1 ] 	[ input_minz	-1 ] 	)
input_max	[ 8	locks=0 ]	(	[ input_maxx	1 ] 	[ input_maxy	1 ] 	[ input_maxz	1 ] 	)
output_min	[ 8	locks=0 ]	(	[ output_minx	-1 ] 	[ output_miny	-1 ] 	[ output_minz	-1 ] 	)
output_max	[ 8	locks=0 ]	(	[ output_maxx	1 ] 	[ output_maxy	1 ] 	[ output_maxz	1 ] 	)
bindname1	[ 0	locks=0 ]	(	__attr	)
bindparm1	[ 0	locks=0 ]	(	attr	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/range_3D1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/IN_MOPS.init"
Content-Type: text/plain

type = null
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/IN_MOPS.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 0.003 7.5338
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	(0) "" 1 "input1"
}
inputs
{
0 	(0) 0 1
}
stat
{
  create 1549074632
  modify 1582671042
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.6 0.7 0.77 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/IN_MOPS.parm"
Content-Type: text/plain

{
version 0.8
copyinput	[ 0	locks=0 ]	(	"on"	)
cacheinput	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/IN_MOPS.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"18.0.391"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch1.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 2.83117 -2.30923
connectornextid 13
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
9 "output1"
}
inputsNamed3
{
0 	Perlin 0 1 "input1"
1 	Simplex 0 1 "input2"
2 	Worley_f2-f1 0 1 "input3"
3 	Worley_f1 0 1 "input4"
4 	Worley_f2 0 1 "input5"
5 	simplex_mosaic 0 1 "input6"
6 	Simplex_Folded 0 1 "input7"
7 	simplex_warped 0 1 "input8"
8 	mix_min 0 1 "input9"
10 	Curl 0 1 "input10"
11 	Alligator 0 1 "input11"
12 	Sparse_Convolution 0 1 "input12"
}
inputs
{
0 	Perlin 0 1
1 	Simplex 0 1
2 	Worley_f2-f1 0 1
3 	Worley_f1 0 1
4 	Worley_f2 0 1
5 	simplex_mosaic 0 1
6 	Simplex_Folded 0 1
7 	simplex_warped 0 1
8 	mix_min 0 1
9 	Curl 0 1
10 	Alligator 0 1
11 	Sparse_Convolution 0 1
}
stat
{
  create 1549075032
  modify 1586107415
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 1 0.7 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch1.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../input\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch1.parm"
Content-Type: text/plain

{
version 0.8
input	[ 0	locks=0 ]	(	[ input	9 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"18.0.391"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output1.init"
Content-Type: text/plain

type = output
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 2.71285 -11.8033
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
0 	switch_noise_signature 2 1 "input1"
}
inputs
{
0 	switch_noise_signature 0 1
}
stat
{
  create 1549075045
  modify 1586108457
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output1.parm"
Content-Type: text/plain

{
version 0.8
outputidx	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"18.0.391"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribdelete1.init"
Content-Type: text/plain

type = attribdelete
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribdelete1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 2.82772 -4.51889
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	back_to_P 1 1 "input1"
}
inputs
{
0 	back_to_P 0 1
}
stat
{
  create 1549075065
  modify 1582671042
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribdelete1.parm"
Content-Type: text/plain

{
version 0.8
ptdel	[ 0	locks=0 ]	(	"__P time_offset"	)
vtxdel	[ 0	locks=0 ]	(	""	)
primdel	[ 0	locks=0 ]	(	""	)
dtldel	[ 0	locks=0 ]	(	""	)
updatevar	[ 0	locks=0 ]	(	"on"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribdelete1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribswap1.init"
Content-Type: text/plain

type = attribswap
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribswap1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 1.12407 -7.64525
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	do_remap_2d 2 1 "input1"
}
inputs
{
0 	do_remap_2d 0 1
}
stat
{
  create 1550294318
  modify 1586107415
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribswap1.parm"
Content-Type: text/plain

{
version 0.8
numswaps	[ 0	locks=0 ]	(	1	)
enable1	[ 0	locks=0 ]	(	"on"	)
method1	[ 0	locks=0 ]	(	"move"	)
class1	[ 0	locks=0 ]	(	"point"	)
srcattribs1	[ 0	locks=0 ]	(	float_attr	)
dstattribs1	[ 0	locks=0 ]	(	`chs(\"../attrname\")`	)
typeinfo1	[ 0	locks=0 ]	(	"dest"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribswap1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"18.0.391"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_noise_signature.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_noise_signature.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 2.71285 -10.2389
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
0 	attribdelete2 1 1 "input1"
1 	attribswap2 1 1 "input2"
}
inputs
{
0 	attribdelete2 0 1
1 	attribswap2 0 1
}
stat
{
  create 1550294550
  modify 1586107415
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 1 0.7 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_noise_signature.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../signature\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_noise_signature.parm"
Content-Type: text/plain

{
version 0.8
input	[ 0	locks=0 ]	(	[ input	1 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_noise_signature.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"18.0.391"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribswap2.init"
Content-Type: text/plain

type = attribswap
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribswap2.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 4.21343 -7.56227
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	do_remap_3d 2 1 "input1"
}
inputs
{
0 	do_remap_3d 0 1
}
stat
{
  create 1550294976
  modify 1586107415
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribswap2.parm"
Content-Type: text/plain

{
version 0.8
numswaps	[ 0	locks=0 ]	(	1	)
enable1	[ 0	locks=0 ]	(	"on"	)
method1	[ 0	locks=0 ]	(	"move"	)
class1	[ 0	locks=0 ]	(	"point"	)
srcattribs1	[ 0	locks=0 ]	(	__attr	)
dstattribs1	[ 0	locks=0 ]	(	`chs(\"../attrnamev\")`	)
typeinfo1	[ 0	locks=0 ]	(	"dest"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribswap2.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"18.0.391"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribdelete2.init"
Content-Type: text/plain

type = attribdelete
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribdelete2.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 1.52531 -8.93446
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	attribswap1 1 1 "input1"
}
inputs
{
0 	attribswap1 0 1
}
stat
{
  create 1550295067
  modify 1583773867
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribdelete2.parm"
Content-Type: text/plain

{
version 0.8
ptdel	[ 0	locks=0 ]	(	__attr	)
vtxdel	[ 0	locks=0 ]	(	""	)
primdel	[ 0	locks=0 ]	(	""	)
dtldel	[ 0	locks=0 ]	(	""	)
updatevar	[ 0	locks=0 ]	(	"on"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribdelete2.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_do_time_varying.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_do_time_varying.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 0.00299999 5.3033
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	pointwrangle1 1 1 "input1"
2 	pointwrangle2 1 1 "input2"
}
inputs
{
0 	pointwrangle1 0 1
1 	pointwrangle2 0 1
}
stat
{
  create 1554935927
  modify 1586107415
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 1 0.7 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_do_time_varying.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../time_varying\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_do_time_varying.parm"
Content-Type: text/plain

{
version 0.8
input	[ 8	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_do_time_varying.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"18.0.391"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/do_remap_3d.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/do_remap_3d.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 4.34034 -6.69173
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
0 	attribdelete1 1 1 "input1"
1 	range_3D1 1 1 "input2"
}
inputs
{
0 	attribdelete1 0 1
1 	range_3D1 0 1
}
stat
{
  create 1582671001
  modify 1586107415
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 1 0.7 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/do_remap_3d.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../do_remap_3D\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/do_remap_3d.parm"
Content-Type: text/plain

{
version 0.8
input	[ 0	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/do_remap_3d.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"18.0.391"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/do_remap_2d.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/do_remap_2d.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 0.925656 -6.67241
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
0 	pointwrangle3 1 1 "input1"
1 	range_2D 1 1 "input2"
}
inputs
{
0 	pointwrangle3 0 1
1 	range_2D 0 1
}
stat
{
  create 1582671001
  modify 1586107415
  author Henry@LAPPY586
  access 0777
}
color UT_Color RGB 0.8 1 0.7 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/do_remap_2d.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../do_remap_2D\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/do_remap_2d.parm"
Content-Type: text/plain

{
version 0.8
input	[ 0	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/do_remap_2d.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"18.0.391"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.order"
Content-Type: text/plain

31
Perlin
Simplex
Worley_f2-f1
Worley_f1
Worley_f2
simplex_mosaic
Simplex_Folded
simplex_warped
mix_min
rest
back_to_P
range_3D
IN_MOPS
switch1
output1
attribdelete1
range_2D
attribswap1
switch_noise_signature
attribswap2
attribdelete2
Curl
switch_do_time_varying
pointwrangle1
pointwrangle2
Alligator
Sparse_Convolution
do_remap_3d
do_remap_2d
pointwrangle3
range_3D1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.net"
Content-Type: text/plain

1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY--
