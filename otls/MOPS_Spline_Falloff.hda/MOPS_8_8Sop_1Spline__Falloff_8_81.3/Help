= MOPs Spline Falloff

#icon: opdef:.?mops_falloff_04.svg

"""Generates a falloff value using a spline."""

This node generates a falloff value based on the relative position to a user-defined spline (curve) object.

MOPs is based on a falloff value (usually in the range of 0-1). The falloff value controls how strongly instances will be affected by modifiers.

== Overview ==

@inputs

Packed Primitives:
    Plug in MOPs instances here.
    
Spline:
    Plug a NURBs curve in here.
    
@parameters

== General ==

Falloff Attribute:
    #id: falloff_attr
    The point attribute to use as the falloff attribute.

Preview Falloff:
    #id: do_preview
    Enable display of the falloff values in the viewport.

Blend Mode:
    #id: input
    The blend mode for combining the effects of this operator with any previous falloff value. See [MOPs Combine Falloffs|Node:sop/MOPS--Combine_Falloffs-1.0] for details.

Blend Strength:
    #id: strength
    The blend weight for the value generated by this Falloff.
    
Clamp:
    #id: switchclamp
    Clamp the resulting Falloff value to a 0-1 range.

== Spline ==

Mode:
    #id: Mode
    The method by which to determine the falloff for each object, relative to their position along the spline.
    * Distance to Spline: Falloff is determined by a point's absolute distance from any point along the spline.
    * Distance Times Curve Position: As above, but multiplied against the curve's parameterization (0-1 value).
    * Curve Position: The falloff value is determined by the parameterization (0-1) value of the nearest point along the spline.
    
Reverse Spline:
    #id: doReverse
    Reverse the parameterization of the spline.
    
Min Distance:
    #id: min
    The minimum distance to consider when computing falloffs.
    
Max Distance:
    #id: max
    The maximum distance to consider when computing falloffs.
    
Resample Spline:
    #id: switch_resample
    Resample the input NURBs curve. The other Resample controls are the same as those on the Resample SOP.
    
== Noise ==

Apply Noise:
    #id: doNoise
    Add procedural noise to the lookup position of the falloff geometry, to break up the pattern.
    
Use Rest Position:
    #id: useRest
    Use the Rest position of the input MOPs, rather than their current world position, for the noise lookup. This prevents swimming patterns as the objects animate.
    
Use Time-Varying Noise:
    #id: doTimeVarying
    Enable 4D noise that evolves over time.
  
Time Scale:
    #id: timeScale
    The evolution speed of time-varying noise.
    
The other parameters in this section correspond to the Unified Noise VOP.

== Remap ==

Fit:
    #id: switchfit

    Enable falloff remapping.
    
Auto min and max input values:
    #id: auto_min_max
    
    Automatically determine the minimum and maximum values to remap from.
    
Reference Frame:
    #id: frame
    The frame to use when computing the automatic minimum and maximum to remap from.
    
Input min: 
    #id: imin
    The minimum value to remap from.
    
Input Max:
    #id: imax
    The maximum value to remap from.
    
Output Min:
    #id: omin
    The minimum value to remap to.
    
Output Max:
    #id: omax
    The maximum value to remap to.
    
Remap Falloff:
    #id: remap_falloff
    A ramp that can be used to fine-tune the remapping values.
    

