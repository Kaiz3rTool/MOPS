= MOPs Texture Falloff =

#icon: opdef:.?mops_falloff_04.svg

"""Generates a falloff value based on a texture file."""

MOPs is based on a falloff value (usually in the range of 0-1). The falloff value controls how strongly instances will be affected by modifiers.
This node generates a falloff value based on an image's brightness.

== Overview ==

@inputs

Packed Primitives:
    Plug in MOPs instances in here.

@parameters

== General ==

Falloff Attribute:
    #id: falloff_attr
    The point attribute to use as the falloff attribute.
    
Blend Mode:
    #id: input
    The blend mode for combining the effects of this operator with any previous falloff value. See [MOPs Combine Falloffs|Node:sop/MOPS--Combine_Falloffs-1.0] for details.

Blend Strength:
    #id: strength
    The blend weight for the value generated by this Falloff.
    
Clamp:
    #id: switchclamp
    Clamp the resulting Falloff value to a 0-1 range.
    
Preview Falloff:
    #id: do_preview
    Enable display of the falloff values in the viewport.
    
== Texture ==

Texture Map:
    #id: filename

    File Path to texture.
    
Color Instances:
    #id: docolor
    
    Color instances using texture map.
    
== ColorIntensity Ramp ==

Color Intensity Ramp:
    #id: color_intensity_ramp
    
    Remaps the image's brightness according to ramp.
    
== Image Settings ==

"""Control mapping of incoming texture onto instances."""
    
Texture Type:
    #id: type
    
    Select how texture ist mapped onto instances (texture projection).
    
Projection Axis:
    #id: axis
    
    Select along which axis the texture projection should happen.
    
Invert U:
    #id: uv_invertu
    
    Flip texture along U axis.
    
Invert V:
    #id: uv_invertv
    
    Flip texture along V axis.
    
Scale:
    #id: uv_scale
    
    Uniformly scale texture.
    
Rotate:
    #id: uv_rz
    
    Rotate texture.
    
Translate:
    #id: uv_tx
    
    Move texture.
    
== Filter Settings ==

"""Control filtering of incoming texture."""
    
Filter:
    #id: filter
    
    Select how to filter incoming texture.
    
Filter Width:
    #id: filter
    
    Controls the filter's radius.
    
Wrap:
    #id: filter
    
    Select what to do at texture edges.
    
Border Color:
    #id: filter
    
    Color to apply at edges of texture in "decal" mode.
        
== Noise ==

Apply Noise:
    #id: doNoise
    Add procedural noise to the lookup position of the falloff geometry, to break up the pattern.
    
Use Rest Position:
    #id: useRest
    Use the Rest position of the input MOPs, rather than their current world position, for the noise lookup. This prevents swimming patterns as the objects animate.
    
Use Time-Varying Noise:
    #id: doTimeVarying
    Enable 4D noise that evolves over time.
  
Time Scale:
    #id: timeScale
    The evolution speed of time-varying noise.
    
The other parameters in this section correspond to the Unified Noise VOP.

== Remap ==

Fit:
    #id: switchfit

    Enable falloff remapping.
    
Auto min and max input values:
    #id: auto_min_max
    
    Automatically determine the minimum and maximum values to remap from.
    
Reference Frame:
    #id: frame
    The frame to use when computing the automatic minimum and maximum to remap from.
    
Input min: 
    #id: imin
    The minimum value to remap from.
    
Input Max:
    #id: imax
    The maximum value to remap from.
    
Output Min:
    #id: omin
    The minimum value to remap to.
    
Output Max:
    #id: omax
    The maximum value to remap to.
    
Remap Falloff:
    #id: remap_falloff
    A ramp that can be used to fine-tune the remapping values.
    
