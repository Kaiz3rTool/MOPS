= MOPs Noise Falloff =

#icon: opdef:.?mops_falloff_04.svg

"""Generates a falloff value using different noises."""

MOPs is based on a falloff value (usually in the range of 0-1). The falloff value controls how strongly instances will be affected by modifiers.
This node generates the falloff value using different noises.

== Overview ==

@inputs

Packed Primitives:
    Plug in MOPs instances in here.
    
Falloff Transforms:
    (Optional) Plug in a MOPs Transform Falloff node to apply an additional offset to the transform of the noise pattern.

@parameters

== General Settings ==

Falloff Attribute:
    #id: falloff_attr
    The point attribute to use as the falloff attribute.

Preview Falloff:
    #id: preview
    Enable display of the falloff values in the viewport.

Blend Mode:
    #id: input
    The blend mode for combining the effects of this operator with any previous falloff value. See [MOPs Combine Falloffs|Node:sop/MOPS--Combine_Falloffs-1.0] for details.

Blend Strength:
    #id: strength
    The blend weight for the value generated by this Falloff.
    
Clamp:
    #id: switchclamp
    Clamp the resulting Falloff value to a 0-1 range.

== Noise ==
    
Mode:
    #id: Noise_Mode

    Select noise type:
    - Perlin: Perlin Noise
    - Simplex: Simplex Noise. Bit Faster Than Perlin, similar appearance.
    - Worley (f2-f1): Looks a bit like cellular structures
    - Worley(f1): Another Cellular Structure
    - Worley (f2): And another Cellular Structure
    - Mosaic: Noise Tiles
    - Folded: Absolute Values of Simplex Noise
    - Mix Minima: Layers 3 simplex noises and uses the min value.
    - Curl: The curl of a Perlin noise field. Here for completeness, but not particularly useful as a scalar value.
    - Sparse Convolution: Similar to Worley noise, but with a metaball-like smooth falloff.
    - Alligator: Also similar to Worley noise. Makes a very rough bumpy texture.

Use Rest:
    #id: use_rest

    Use rest position.
    
Time Varying Noise:
    #id: timevarying
    
    Enable 4D noise that evolves over time.
    
Time Scale:
    #id: timescale
    
    The evolution speed of time-varying noise.

    
Amplitude:
    #id: amp

    Noise value output amplitude.
    
Octaves:
    #id: octaves

    Noise octaves. Adds detail to noise.
    
Persistence:
    #id: roughness

    Strength of octave'd noise.
    
Frequency:
    #id: freq
    
    Noise frequency. How quickly the noise varies.
    
Offset:
    #id: offset

    Noise offset. Animate to give impression of flowing noise.
    
Uniform:
    #id: uniform

    Scale Frequency, Tile size & distortion uniformly (using x Component).
    
Tile Size:
    #id: tile_size

    Size of noise's tiles (Mosaic Noise mode only).
    
Distort:
    #id: Distort

    Strength of noise distortion (Warped Simplex mode only).
    
== Remap ==
    
Fit:
    #id: switchfit

    Enable falloff remapping.
    
Auto min and max input values:
    #id: auto_min_max
    
    Automatically determine the minimum and maximum values to remap from.
    
Reference Frame:
    #id: frame
    The frame to use when computing the automatic minimum and maximum to remap from.
    
Input min: 
    #id: imin
    The minimum value to remap from.
    
Input Max:
    #id: imax
    The maximum value to remap from.
    
Output Min:
    #id: omin
    The minimum value to remap to.
    
Output Max:
    #id: omax
    The maximum value to remap to.
    
Remap Falloff:
    #id: remap_falloff
    A ramp that can be used to fine-tune the remapping values.
               
@related

* [Node:sop/MOPs_Combine_Falloffs]
* [Node:sop/MOPs_Object_Falloff]
* [Node:sop/MOPs_Plain_Falloff]
* [Node:sop/MOPs_Remap_Falloff]
* [Node:sop/MOPs_Shape_Falloff]
* [Node:sop/MOPs_Spline_Falloffs]
* [Node:sop/MOPs_Texture_Falloff]
* [Node:sop/MOPs_Index_From_Attribute]
* [Node:sop/MOPs_Transform_Falloffs]